{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14","program":"C:\\Users\\jhyra\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_channel","--edition=2018","C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=93f3138f6d937451","-C","extra-filename=-93f3138f6d937451","--out-dir","c:\\Users\\jhyra\\Documents\\VisualStudioCodeProjects\\RustKlipperTelegramBot\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\jhyra\\Documents\\VisualStudioCodeProjects\\RustKlipperTelegramBot\\target\\rls\\debug\\deps","--extern","futures_core=c:\\Users\\jhyra\\Documents\\VisualStudioCodeProjects\\RustKlipperTelegramBot\\target\\rls\\debug\\deps\\libfutures_core-865c4164441fc340.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\jhyra\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\jhyra\\Documents\\VisualStudioCodeProjects\\RustKlipperTelegramBot\\target\\rls\\debug\\deps\\libfutures_channel-93f3138f6d937451.rmeta"},"prelude":{"crate_id":{"name":"futures_channel","disambiguator":[15714611417710525463,4606051271157127112]},"crate_root":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src","external_crates":[{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lock.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","num":13,"id":{"name":"futures_core","disambiguator":[15248096290050914236,18349819586359219412]}}],"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":0,"byte_end":1663,"line_start":1,"line_end":44,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":0,"byte_end":1663,"line_start":1,"line_end":44,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":34},{"krate":0,"index":259}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"/ Asynchronous channels.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":27,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Like threads, concurrent tasks sometimes need to communicate with each","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":31,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ other. This module contains two basic abstractions for doing so:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":106,"byte_end":174,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":175,"byte_end":178,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - [oneshot], a way of sending a single value from one task to another.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":179,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ - [mpsc], a multi-producer, single-consumer channel for sending values","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":254,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/   between tasks, analogous to the similarly-named structure in the standard","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":329,"byte_end":408,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   library.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":409,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":424,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All items are only available when the `std` or `alloc` feature of this","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":428,"byte_end":502,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":503,"byte_end":560,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":687,"byte_end":775,"line_start":18,"line_end":18,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":943,"byte_end":964,"line_start":21,"line_end":21,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::mpsc","value":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":535},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":353},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":356},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":367},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":91},{"krate":0,"index":382},{"krate":0,"index":393},{"krate":0,"index":391},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":395},{"krate":0,"index":410},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":413},{"krate":0,"index":426},{"krate":0,"index":424},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":428},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":454},{"krate":0,"index":452},{"krate":0,"index":451},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":141},{"krate":0,"index":156},{"krate":0,"index":171},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":1569,"byte_end":1592,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8725653,"byte_end":8725722,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8725723,"byte_end":8725746,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8725747,"byte_end":8725750,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Similarly to the `std`, channel creation provides [`Receiver`] and","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8725751,"byte_end":8725821,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ [`Sender`] handles. [`Receiver`] implements [`Stream`] and allows a task to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8725822,"byte_end":8725901,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ read values out of the channel. If there is no message to read from the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8725902,"byte_end":8725977,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ channel, the current task will be notified when a new value is sent.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8725978,"byte_end":8726050,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ [`Sender`] implements the `Sink` trait and allows a task to send messages into","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726051,"byte_end":8726133,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ the channel. If the channel is at capacity, the send will be rejected and","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726134,"byte_end":8726211,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ the task will be notified when additional capacity is available. In other","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726212,"byte_end":8726289,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ words, the channel provides backpressure.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726290,"byte_end":8726335,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726336,"byte_end":8726339,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Unbounded channels are also available using the `unbounded` constructor.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726340,"byte_end":8726416,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726417,"byte_end":8726420,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726421,"byte_end":8726440,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726441,"byte_end":8726444,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726445,"byte_end":8726511,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726512,"byte_end":8726592,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, [`Receiver::poll_next`]","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726593,"byte_end":8726650,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/ will return `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726651,"byte_end":8726685,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726686,"byte_end":8726689,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726690,"byte_end":8726760,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726761,"byte_end":8726840,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726841,"byte_end":8726864,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726865,"byte_end":8726868,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726869,"byte_end":8726889,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726890,"byte_end":8726893,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] is simply dropped, then it is possible for","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726894,"byte_end":8726960,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ there to be messages still in the channel that will not be processed. As","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8726961,"byte_end":8727037,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ such, it is usually desirable to perform a \"clean\" shutdown. To do this, the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8727038,"byte_end":8727118,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ receiver will first call `close`, which will prevent any further messages to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8727119,"byte_end":8727199,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ be sent into the channel. Then, the receiver consumes the channel to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8727200,"byte_end":8727272,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ completion, at which point the receiver can be dropped.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8727273,"byte_end":8727332,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8727333,"byte_end":8727336,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct.Sender.html","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8727337,"byte_end":8727371,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ [`Receiver`]: struct.Receiver.html","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8727372,"byte_end":8727410,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ [`Stream`]: ../../futures_core/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8727411,"byte_end":8727470,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/ [`Receiver::poll_next`]:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8727471,"byte_end":8727499,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     ../../futures_core/stream/trait.Stream.html#tymethod.poll_next","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8727500,"byte_end":8727570,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8730961,"byte_end":8730967,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"Sender","qualname":"::mpsc::Sender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of a bounded mpsc channel.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8730813,"byte_end":8730864,"line_start":122,"line_end":122,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8730865,"byte_end":8730868,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8730869,"byte_end":8730932,"line_start":124,"line_end":124,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731159,"byte_end":8731174,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded mpsc channel.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731004,"byte_end":8731058,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731059,"byte_end":8731062,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731063,"byte_end":8731130,"line_start":130,"line_end":130,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731446,"byte_end":8731454,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":372}],"decl_id":null,"docs":" The receiving end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of a bounded mpsc channel.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731301,"byte_end":8731349,"line_start":137,"line_end":137,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731350,"byte_end":8731353,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731354,"byte_end":8731417,"line_start":139,"line_end":139,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731656,"byte_end":8731673,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::mpsc::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":378}],"decl_id":null,"docs":" The receiving end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded mpsc channel.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731504,"byte_end":8731555,"line_start":145,"line_end":145,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731556,"byte_end":8731559,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731560,"byte_end":8731627,"line_start":147,"line_end":147,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731950,"byte_end":8731959,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"SendError","qualname":"::mpsc::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":383}],"decl_id":null,"docs":" The error type for [`Sender`s](Sender) used as `Sink`s.\n","sig":null,"attributes":[{"value":"/ The error type for [`Sender`s](Sender) used as `Sink`s.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731840,"byte_end":8731899,"line_start":156,"line_end":156,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8732098,"byte_end":8732110,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"decl_id":null,"docs":" The error type returned from [`try_send`](Sender::try_send).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_send`](Sender::try_send).","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731990,"byte_end":8732054,"line_start":162,"line_end":162,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8732320,"byte_end":8732332,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"TryRecvError","qualname":"::mpsc::TryRecvError","value":"TryRecvError {  }","parent":null,"children":[{"krate":0,"index":94}],"decl_id":null,"docs":" The error type returned from [`try_next`](Receiver::try_next).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_next`](Receiver::try_next).","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8732242,"byte_end":8732308,"line_start":175,"line_end":175,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8732782,"byte_end":8732789,"line_start":194,"line_end":194,"column_start":12,"column_end":19},"name":"is_full","qualname":"<SendError>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8732699,"byte_end":8732770,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8733006,"byte_end":8733021,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<SendError>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8732919,"byte_end":8732994,"line_start":201,"line_end":201,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8733846,"byte_end":8733853,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8733763,"byte_end":8733834,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8733996,"byte_end":8734011,"line_start":237,"line_end":237,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8733909,"byte_end":8733984,"line_start":236,"line_end":236,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8734152,"byte_end":8734162,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8734075,"byte_end":8734140,"line_start":241,"line_end":241,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8734270,"byte_end":8734285,"line_start":247,"line_end":247,"column_start":12,"column_end":27},"name":"into_send_error","qualname":"<TrySendError<T>>::into_send_error","value":"pub fn into_send_error(Self) -> SendError","parent":null,"children":[],"decl_id":null,"docs":" Drops the message and converts into a `SendError`.\n","sig":null,"attributes":[{"value":"/ Drops the message and converts into a `SendError`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8734204,"byte_end":8734258,"line_start":246,"line_end":246,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8737690,"byte_end":8737697,"line_start":364,"line_end":364,"column_start":8,"column_end":15},"name":"channel","qualname":"::mpsc::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8737064,"byte_end":8737144,"line_start":353,"line_end":353,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8737145,"byte_end":8737148,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ Being bounded, this channel provides backpressure to ensure that the sender","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8737149,"byte_end":8737228,"line_start":355,"line_end":355,"column_start":1,"column_end":80}},{"value":"/ outpaces the receiver by only a limited amount. The channel's capacity is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8737229,"byte_end":8737306,"line_start":356,"line_end":356,"column_start":1,"column_end":78}},{"value":"/ equal to `buffer + num-senders`. In other words, each sender gets a","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8737307,"byte_end":8737378,"line_start":357,"line_end":357,"column_start":1,"column_end":72}},{"value":"/ guaranteed slot in the channel capacity, and on top of that there are","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8737379,"byte_end":8737452,"line_start":358,"line_end":358,"column_start":1,"column_end":74}},{"value":"/ `buffer` \"first come, first serve\" slots available to all senders.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8737453,"byte_end":8737523,"line_start":359,"line_end":359,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8737524,"byte_end":8737527,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ The [`Receiver`](Receiver) returned implements the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8737528,"byte_end":8737582,"line_start":361,"line_end":361,"column_start":1,"column_end":55}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait, while [`Sender`](Sender) implements","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8737583,"byte_end":8737670,"line_start":362,"line_end":362,"column_start":1,"column_end":88}},{"value":"/ `Sink`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8737671,"byte_end":8737682,"line_start":363,"line_end":363,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8738961,"byte_end":8738970,"line_start":401,"line_end":401,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::mpsc::unbounded","value":"pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8738449,"byte_end":8738525,"line_start":391,"line_end":391,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8738526,"byte_end":8738536,"line_start":392,"line_end":392,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8738537,"byte_end":8738540,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8738541,"byte_end":8738621,"line_start":394,"line_end":394,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8738622,"byte_end":8738701,"line_start":395,"line_end":395,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8738702,"byte_end":8738715,"line_start":396,"line_end":396,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8738716,"byte_end":8738719,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8738720,"byte_end":8738799,"line_start":398,"line_end":398,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8738800,"byte_end":8738876,"line_start":399,"line_end":399,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8738877,"byte_end":8738953,"line_start":400,"line_end":400,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8749740,"byte_end":8749748,"line_start":723,"line_end":723,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender`, returning the message\n if there was an error.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender`, returning the message","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8749627,"byte_end":8749697,"line_start":721,"line_end":721,"column_start":5,"column_end":75}},{"value":"/ if there was an error.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8749702,"byte_end":8749728,"line_start":722,"line_end":722,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750309,"byte_end":8750319,"line_start":741,"line_end":741,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Sender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750093,"byte_end":8750127,"line_start":736,"line_end":736,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750132,"byte_end":8750135,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ This function should only be called after","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750140,"byte_end":8750185,"line_start":738,"line_end":738,"column_start":5,"column_end":50}},{"value":"/ [`poll_ready`](Sender::poll_ready) has reported that the channel is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750190,"byte_end":8750261,"line_start":739,"line_end":739,"column_start":5,"column_end":76}},{"value":"/ ready to receive a message.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750266,"byte_end":8750297,"line_start":740,"line_end":740,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750947,"byte_end":8750957,"line_start":758,"line_end":758,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed capacity to send\n at least one item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed capacity to send","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750436,"byte_end":8750510,"line_start":746,"line_end":746,"column_start":5,"column_end":79}},{"value":"/ at least one item without waiting.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750515,"byte_end":8750553,"line_start":747,"line_end":747,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750558,"byte_end":8750561,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750566,"byte_end":8750584,"line_start":749,"line_end":749,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750589,"byte_end":8750592,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750597,"byte_end":8750621,"line_start":751,"line_end":751,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750626,"byte_end":8750629,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Ok(_))` if there is sufficient capacity;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750634,"byte_end":8750693,"line_start":753,"line_end":753,"column_start":5,"column_end":64}},{"value":"/ - `Poll::Pending` if the channel may not have","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750698,"byte_end":8750747,"line_start":754,"line_end":754,"column_start":5,"column_end":54}},{"value":"/   capacity, in which case the current task is queued to be notified once","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750752,"byte_end":8750828,"line_start":755,"line_end":755,"column_start":5,"column_end":81}},{"value":"/   capacity is available;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750833,"byte_end":8750861,"line_start":756,"line_end":756,"column_start":5,"column_end":33}},{"value":"/ - `Poll::Ready(Err(SendError))` if the receiver has been dropped.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8750866,"byte_end":8750935,"line_start":757,"line_end":757,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8751282,"byte_end":8751291,"line_start":769,"line_end":769,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8751201,"byte_end":8751270,"line_start":768,"line_end":768,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8751481,"byte_end":8751494,"line_start":774,"line_end":774,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<Sender<T>>::close_channel","value":"pub fn close_channel(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8751395,"byte_end":8751469,"line_start":773,"line_end":773,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8751710,"byte_end":8751720,"line_start":781,"line_end":781,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<Sender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8751607,"byte_end":8751698,"line_start":780,"line_end":780,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8751838,"byte_end":8751851,"line_start":786,"line_end":786,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<Sender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8751768,"byte_end":8751826,"line_start":785,"line_end":785,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8752099,"byte_end":8752114,"line_start":794,"line_end":794,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8752034,"byte_end":8752087,"line_start":793,"line_end":793,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8752382,"byte_end":8752395,"line_start":802,"line_end":802,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<Sender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8752322,"byte_end":8752370,"line_start":801,"line_end":801,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8752676,"byte_end":8752686,"line_start":812,"line_end":812,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<UnboundedSender<T>>::poll_ready","value":"pub fn poll_ready(&Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Check if the channel is ready to receive a message.\n","sig":null,"attributes":[{"value":"/ Check if the channel is ready to receive a message.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8752609,"byte_end":8752664,"line_start":811,"line_end":811,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8753007,"byte_end":8753016,"line_start":823,"line_end":823,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8752926,"byte_end":8752995,"line_start":822,"line_end":822,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8753208,"byte_end":8753221,"line_start":828,"line_end":828,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<UnboundedSender<T>>::close_channel","value":"pub fn close_channel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8753122,"byte_end":8753196,"line_start":827,"line_end":827,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8753429,"byte_end":8753439,"line_start":835,"line_end":835,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<UnboundedSender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8753326,"byte_end":8753417,"line_start":834,"line_end":834,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8754156,"byte_end":8754166,"line_start":860,"line_end":860,"column_start":12,"column_end":22},"name":"start_send","qualname":"<UnboundedSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8753961,"byte_end":8753995,"line_start":856,"line_end":856,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8754000,"byte_end":8754003,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ This method should only be called after `poll_ready` has been used to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8754008,"byte_end":8754081,"line_start":858,"line_end":858,"column_start":5,"column_end":78}},{"value":"/ verify that the channel is ready to receive a message.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8754086,"byte_end":8754144,"line_start":859,"line_end":859,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8754531,"byte_end":8754545,"line_start":870,"line_end":870,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"pub fn unbounded_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message along this channel.","sig":null,"attributes":[{"value":"/ Sends a message along this channel.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8754285,"byte_end":8754324,"line_start":865,"line_end":865,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8754329,"byte_end":8754332,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8754337,"byte_end":8754412,"line_start":867,"line_end":867,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8754417,"byte_end":8754493,"line_start":868,"line_end":868,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8754498,"byte_end":8754519,"line_start":869,"line_end":869,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8754704,"byte_end":8754717,"line_start":875,"line_end":875,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<UnboundedSender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8754634,"byte_end":8754692,"line_start":874,"line_end":874,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8754965,"byte_end":8754980,"line_start":883,"line_end":883,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<UnboundedSender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &UnboundedReceiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8754900,"byte_end":8754953,"line_start":882,"line_end":882,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8755257,"byte_end":8755270,"line_start":891,"line_end":891,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<UnboundedSender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8755197,"byte_end":8755245,"line_start":890,"line_end":890,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8758881,"byte_end":8758886,"line_start":1006,"line_end":1006,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8758644,"byte_end":8758708,"line_start":1002,"line_end":1002,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8758713,"byte_end":8758716,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8758721,"byte_end":8758796,"line_start":1004,"line_end":1004,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8758801,"byte_end":8758869,"line_start":1005,"line_end":1005,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8759809,"byte_end":8759817,"line_start":1028,"line_end":1028,"column_start":12,"column_end":20},"name":"try_next","qualname":"<Receiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8759281,"byte_end":8759356,"line_start":1018,"line_end":1018,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8759361,"byte_end":8759364,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8759369,"byte_end":8759441,"line_start":1020,"line_end":1020,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8759446,"byte_end":8759520,"line_start":1021,"line_end":1021,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8759525,"byte_end":8759545,"line_start":1022,"line_end":1022,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8759550,"byte_end":8759553,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8759558,"byte_end":8759584,"line_start":1024,"line_end":1024,"column_start":5,"column_end":31}},{"value":"/ * `Ok(Some(t))` when message is fetched","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8759589,"byte_end":8759632,"line_start":1025,"line_end":1025,"column_start":5,"column_end":48}},{"value":"/ * `Ok(None)` when channel is closed and no messages left in the queue","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8759637,"byte_end":8759710,"line_start":1026,"line_end":1026,"column_start":5,"column_end":78}},{"value":"/ * `Err(e)` when there are no messages available, but channel is not yet closed","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8759715,"byte_end":8759797,"line_start":1027,"line_end":1027,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8764746,"byte_end":8764751,"line_start":1165,"line_end":1165,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8764509,"byte_end":8764573,"line_start":1161,"line_end":1161,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8764578,"byte_end":8764581,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8764586,"byte_end":8764661,"line_start":1163,"line_end":1163,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8764666,"byte_end":8764734,"line_start":1164,"line_end":1164,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8765393,"byte_end":8765401,"line_start":1181,"line_end":1181,"column_start":12,"column_end":20},"name":"try_next","qualname":"<UnboundedReceiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8764865,"byte_end":8764940,"line_start":1171,"line_end":1171,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8764945,"byte_end":8764948,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8764953,"byte_end":8765025,"line_start":1173,"line_end":1173,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8765030,"byte_end":8765104,"line_start":1174,"line_end":1174,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8765109,"byte_end":8765129,"line_start":1175,"line_end":1175,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8765134,"byte_end":8765137,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8765142,"byte_end":8765168,"line_start":1177,"line_end":1177,"column_start":5,"column_end":31}},{"value":"/ * `Ok(Some(t))` when message is fetched","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8765173,"byte_end":8765216,"line_start":1178,"line_end":1178,"column_start":5,"column_end":48}},{"value":"/ * `Ok(None)` when channel is closed and no messages left in the queue","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8765221,"byte_end":8765294,"line_start":1179,"line_end":1179,"column_start":5,"column_end":78}},{"value":"/ * `Err(e)` when there are no messages available, but channel is not yet closed","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8765299,"byte_end":8765381,"line_start":1180,"line_end":1180,"column_start":5,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::oneshot","value":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":563},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":473},{"krate":0,"index":479},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":290},{"krate":0,"index":297},{"krate":0,"index":482},{"krate":0,"index":486},{"krate":0,"index":300},{"krate":0,"index":490},{"krate":0,"index":501},{"krate":0,"index":500},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":492},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":315},{"krate":0,"index":318}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":1615,"byte_end":1640,"line_start":42,"line_end":42,"column_start":5,"column_end":30}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8777780,"byte_end":8777850,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8777851,"byte_end":8777854,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is a single-producer, single-consumer channel.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8777855,"byte_end":8777910,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8778404,"byte_end":8778412,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":463}],"decl_id":null,"docs":" A future for a value that will be provided by another asynchronous task.","sig":null,"attributes":[{"value":"/ A future for a value that will be provided by another asynchronous task.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8778169,"byte_end":8778245,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8778246,"byte_end":8778249,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8778250,"byte_end":8778307,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8778308,"byte_end":8778375,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8778597,"byte_end":8778603,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Sender","qualname":"::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":469}],"decl_id":null,"docs":" A means of transmitting a single value to another task.","sig":null,"attributes":[{"value":"/ A means of transmitting a single value to another task.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8778447,"byte_end":8778506,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8778507,"byte_end":8778510,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8778511,"byte_end":8778568,"line_start":26,"line_end":26,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781707,"byte_end":8781714,"line_start":107,"line_end":107,"column_start":8,"column_end":15},"name":"channel","qualname":"::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending a single value across asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending a single value across asynchronous tasks.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8780508,"byte_end":8780596,"line_start":73,"line_end":73,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8780597,"byte_end":8780600,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The channel works for a spsc (single-producer, single-consumer) scheme.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8780601,"byte_end":8780676,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8780677,"byte_end":8780680,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channel constructor found in the standard","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8780681,"byte_end":8780761,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ library. Two halves are returned, the first of which is a `Sender` handle,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8780762,"byte_end":8780840,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ used to signal the end of a computation and provide its value. The second","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8780841,"byte_end":8780918,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ half is a `Receiver` which implements the `Future` trait, resolving to the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8780919,"byte_end":8780997,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ value that was given to the `Sender` handle.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8780998,"byte_end":8781046,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781047,"byte_end":8781050,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across tasks.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781051,"byte_end":8781111,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781112,"byte_end":8781115,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781116,"byte_end":8781130,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781131,"byte_end":8781134,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781135,"byte_end":8781142,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781143,"byte_end":8781177,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ use std::{thread, time::Duration};","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781178,"byte_end":8781216,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781217,"byte_end":8781220,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ let (sender, receiver) = oneshot::channel::<i32>();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781221,"byte_end":8781276,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781277,"byte_end":8781280,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(|| {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781281,"byte_end":8781303,"line_start":93,"line_end":93,"column_start":1,"column_end":23}},{"value":"/     println!(\"THREAD: sleeping zzz...\");","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781304,"byte_end":8781348,"line_start":94,"line_end":94,"column_start":1,"column_end":45}},{"value":"/     thread::sleep(Duration::from_millis(1000));","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781349,"byte_end":8781400,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/     println!(\"THREAD: i'm awake! sending.\");","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781401,"byte_end":8781449,"line_start":96,"line_end":96,"column_start":1,"column_end":49}},{"value":"/     sender.send(3).unwrap();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781450,"byte_end":8781482,"line_start":97,"line_end":97,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781483,"byte_end":8781490,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781491,"byte_end":8781494,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ println!(\"MAIN: doing some useful stuff\");","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781495,"byte_end":8781541,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781542,"byte_end":8781545,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781546,"byte_end":8781585,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/     println!(\"MAIN: waiting for msg...\");","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781586,"byte_end":8781631,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/     println!(\"MAIN: got: {:?}\", receiver.await)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781632,"byte_end":8781683,"line_start":104,"line_end":104,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781684,"byte_end":8781691,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781692,"byte_end":8781699,"line_start":106,"line_end":106,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8790977,"byte_end":8790981,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8790484,"byte_end":8790536,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8790541,"byte_end":8790544,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8790549,"byte_end":8790621,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ [`Receiver`](Receiver), that the value provided is the result of the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8790626,"byte_end":8790698,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ computation this represents.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8790703,"byte_end":8790735,"line_start":340,"line_end":340,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8790740,"byte_end":8790743,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8790748,"byte_end":8790820,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was dropped before","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8790825,"byte_end":8790895,"line_start":343,"line_end":343,"column_start":5,"column_end":75}},{"value":"/ this function was called, however, then `Err(t)` is returned.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8790900,"byte_end":8790965,"line_start":344,"line_end":344,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791633,"byte_end":8791646,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"poll_canceled","qualname":"<Sender<T>>::poll_canceled","value":"pub fn poll_canceled(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether its associated\n [`Receiver`](Receiver) has been dropped.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether its associated","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791051,"byte_end":8791112,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ [`Receiver`](Receiver) has been dropped.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791117,"byte_end":8791161,"line_start":350,"line_end":350,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791166,"byte_end":8791169,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Return values","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791174,"byte_end":8791193,"line_start":352,"line_end":352,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791198,"byte_end":8791201,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If `Ready(())` is returned then the associated `Receiver` has been","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791206,"byte_end":8791276,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791281,"byte_end":8791355,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791360,"byte_end":8791363,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If `Pending` is returned then the associated `Receiver` is still","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791368,"byte_end":8791436,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/ alive and may be able to receive a message if sent. The current task,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791441,"byte_end":8791514,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ however, is scheduled to receive a notification if the corresponding","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791519,"byte_end":8791591,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ `Receiver` goes away.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791596,"byte_end":8791621,"line_start":360,"line_end":360,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792010,"byte_end":8792022,"line_start":370,"line_end":370,"column_start":12,"column_end":24},"name":"cancellation","qualname":"<Sender<T>>::cancellation","value":"pub fn cancellation(&mut Self) -> Cancellation<, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that resolves when this `Sender`'s corresponding\n [`Receiver`](Receiver) half has hung up.","sig":null,"attributes":[{"value":"/ Creates a future that resolves when this `Sender`'s corresponding","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791742,"byte_end":8791811,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ [`Receiver`](Receiver) half has hung up.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791816,"byte_end":8791860,"line_start":366,"line_end":366,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791865,"byte_end":8791868,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This is a utility wrapping [`poll_canceled`](Sender::poll_canceled)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791873,"byte_end":8791944,"line_start":368,"line_end":368,"column_start":5,"column_end":76}},{"value":"/ to expose a [`Future`](core::future::Future).","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8791949,"byte_end":8791998,"line_start":369,"line_end":369,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792446,"byte_end":8792457,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has been dropped.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792107,"byte_end":8792172,"line_start":374,"line_end":374,"column_start":5,"column_end":70}},{"value":"/ has been dropped.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792177,"byte_end":8792198,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792203,"byte_end":8792206,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Unlike [`poll_canceled`](Sender::poll_canceled), this function does not","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792211,"byte_end":8792286,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ enqueue a task for wakeup upon cancellation, but merely reports the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792291,"byte_end":8792362,"line_start":378,"line_end":378,"column_start":5,"column_end":76}},{"value":"/ current state, which may be subject to concurrent modification.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792367,"byte_end":8792434,"line_start":379,"line_end":379,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792681,"byte_end":8792696,"line_start":386,"line_end":386,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether\n they were created by the same call to `channel`.\n","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792519,"byte_end":8792612,"line_start":384,"line_end":384,"column_start":5,"column_end":98}},{"value":"/ they were created by the same call to `channel`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792617,"byte_end":8792669,"line_start":385,"line_end":385,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793157,"byte_end":8793169,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"Cancellation","qualname":"::oneshot::Cancellation","value":"Cancellation {  }","parent":null,"children":[{"krate":0,"index":485}],"decl_id":null,"docs":" A future that resolves when the receiving end of a channel has hung up.","sig":null,"attributes":[{"value":"/ A future that resolves when the receiving end of a channel has hung up.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792889,"byte_end":8792964,"line_start":397,"line_end":397,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792965,"byte_end":8792968,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ This is an `.await`-friendly interface around [`poll_canceled`](Sender::poll_canceled).","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792969,"byte_end":8793060,"line_start":399,"line_end":399,"column_start":1,"column_end":92}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793061,"byte_end":8793128,"line_start":400,"line_end":400,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793559,"byte_end":8793567,"line_start":417,"line_end":417,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a [`Receiver`](Receiver) when the corresponding\n [`Sender`](Sender) is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a [`Receiver`](Receiver) when the corresponding","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793396,"byte_end":8793467,"line_start":414,"line_end":414,"column_start":1,"column_end":72}},{"value":"/ [`Sender`](Sender) is dropped.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793468,"byte_end":8793502,"line_start":415,"line_end":415,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794175,"byte_end":8794180,"line_start":436,"line_end":436,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing any subsequent attempts to\n send to it.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing any subsequent attempts to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793803,"byte_end":8793876,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ send to it.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793881,"byte_end":8793896,"line_start":430,"line_end":430,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793901,"byte_end":8793904,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793909,"byte_end":8793976,"line_start":432,"line_end":432,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. After calling this method, you can use","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793981,"byte_end":8794043,"line_start":433,"line_end":433,"column_start":5,"column_end":67}},{"value":"/ [`Receiver::poll`](core::future::Future::poll) to determine whether a","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794048,"byte_end":8794121,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ message had previously been sent.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794126,"byte_end":8794163,"line_start":435,"line_end":435,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794611,"byte_end":8794619,"line_start":448,"line_end":448,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794235,"byte_end":8794302,"line_start":440,"line_end":440,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794307,"byte_end":8794310,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794315,"byte_end":8794382,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794387,"byte_end":8794390,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794395,"byte_end":8794468,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ date) unless [`close`](Receiver::close) has been called first.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794473,"byte_end":8794539,"line_start":445,"line_end":445,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794544,"byte_end":8794547,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794552,"byte_end":8794599,"line_start":447,"line_end":447,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lock.rs","byte_start":8723664,"byte_end":8723668,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lock.rs","byte_start":8723705,"byte_end":8723709,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lock.rs","byte_start":8723725,"byte_end":8723729,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lock.rs","byte_start":8724567,"byte_end":8724574,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lock.rs","byte_start":8724827,"byte_end":8724834,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lock.rs","byte_start":8725197,"byte_end":8725204,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\queue.rs","byte_start":8774317,"byte_end":8774322,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\queue.rs","byte_start":8774360,"byte_end":8774365,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\queue.rs","byte_start":8774382,"byte_end":8774386,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\queue.rs","byte_start":8774579,"byte_end":8774584,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\queue.rs","byte_start":8777481,"byte_end":8777486,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8730742,"byte_end":8730762,"line_start":119,"line_end":119,"column_start":19,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8730787,"byte_end":8730805,"line_start":120,"line_end":120,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731276,"byte_end":8731291,"line_start":135,"line_end":135,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731815,"byte_end":8731832,"line_start":154,"line_end":154,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8732375,"byte_end":8732384,"line_start":180,"line_end":180,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8732664,"byte_end":8732673,"line_start":190,"line_end":190,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8732683,"byte_end":8732692,"line_start":192,"line_end":192,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8733180,"byte_end":8733192,"line_start":210,"line_end":210,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8733399,"byte_end":8733411,"line_start":218,"line_end":218,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8733713,"byte_end":8733725,"line_start":228,"line_end":228,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8733741,"byte_end":8733753,"line_start":230,"line_end":230,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8734353,"byte_end":8734365,"line_start":252,"line_end":252,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8734522,"byte_end":8734534,"line_start":259,"line_end":259,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8734683,"byte_end":8734695,"line_start":265,"line_end":265,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8736791,"byte_end":8736801,"line_start":336,"line_end":336,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8739470,"byte_end":8739490,"line_start":427,"line_end":427,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8742348,"byte_end":8742366,"line_start":513,"line_end":513,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8749611,"byte_end":8749617,"line_start":720,"line_end":720,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8752584,"byte_end":8752599,"line_start":810,"line_end":810,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8755469,"byte_end":8755475,"line_start":899,"line_end":899,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8755567,"byte_end":8755582,"line_start":905,"line_end":905,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8755674,"byte_end":8755694,"line_start":911,"line_end":911,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8756795,"byte_end":8756813,"line_start":941,"line_end":941,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8758064,"byte_end":8758084,"line_start":973,"line_end":973,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8758329,"byte_end":8758347,"line_start":984,"line_end":984,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8758626,"byte_end":8758634,"line_start":1001,"line_end":1001,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8762291,"byte_end":8762299,"line_start":1095,"line_end":1095,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8762331,"byte_end":8762339,"line_start":1097,"line_end":1097,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8762440,"byte_end":8762448,"line_start":1103,"line_end":1103,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8763328,"byte_end":8763336,"line_start":1130,"line_end":1130,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8764482,"byte_end":8764499,"line_start":1160,"line_end":1160,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8767360,"byte_end":8767377,"line_start":1234,"line_end":1234,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8767478,"byte_end":8767495,"line_start":1240,"line_end":1240,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8768371,"byte_end":8768388,"line_start":1267,"line_end":1267,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8769574,"byte_end":8769588,"line_start":1303,"line_end":1303,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8769871,"byte_end":8769883,"line_start":1315,"line_end":1315,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8770409,"byte_end":8770423,"line_start":1333,"line_end":1333,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8770460,"byte_end":8770474,"line_start":1334,"line_end":1334,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8770512,"byte_end":8770524,"line_start":1336,"line_end":1336,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8770561,"byte_end":8770573,"line_start":1337,"line_end":1337,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8770586,"byte_end":8770591,"line_start":1339,"line_end":1339,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8778711,"byte_end":8778719,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8778744,"byte_end":8778750,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781939,"byte_end":8781944,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8790468,"byte_end":8790474,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792814,"byte_end":8792820,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793231,"byte_end":8793243,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793592,"byte_end":8793600,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793764,"byte_end":8793772,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793785,"byte_end":8793793,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794722,"byte_end":8794730,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794947,"byte_end":8794955,"line_start":464,"line_end":464,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8795296,"byte_end":8795304,"line_start":479,"line_end":479,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":1605,"byte_end":1609,"line_start":41,"line_end":41,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lib.rs","byte_start":1653,"byte_end":1660,"line_start":43,"line_end":43,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":259}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lock.rs","byte_start":8723664,"byte_end":8723668,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lock.rs","byte_start":8723705,"byte_end":8723709,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lock.rs","byte_start":8723725,"byte_end":8723729,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lock.rs","byte_start":8724567,"byte_end":8724574,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lock.rs","byte_start":8724827,"byte_end":8724834,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\lock.rs","byte_start":8725197,"byte_end":8725204,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\queue.rs","byte_start":8774317,"byte_end":8774322,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\queue.rs","byte_start":8774360,"byte_end":8774365,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\queue.rs","byte_start":8774382,"byte_end":8774386,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\queue.rs","byte_start":8774579,"byte_end":8774584,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\queue.rs","byte_start":8777481,"byte_end":8777486,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":335},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8730742,"byte_end":8730762,"line_start":119,"line_end":119,"column_start":19,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":342},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8730787,"byte_end":8730805,"line_start":120,"line_end":120,"column_start":19,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731232,"byte_end":8731236,"line_start":134,"line_end":134,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":89}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731239,"byte_end":8731243,"line_start":134,"line_end":134,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":89}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731246,"byte_end":8731251,"line_start":134,"line_end":134,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1770},"to":{"krate":0,"index":89}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731276,"byte_end":8731291,"line_start":135,"line_end":135,"column_start":22,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":363},"to":{"krate":0,"index":89}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8731815,"byte_end":8731832,"line_start":154,"line_end":154,"column_start":19,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8732375,"byte_end":8732384,"line_start":180,"line_end":180,"column_start":23,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":382},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8732664,"byte_end":8732673,"line_start":190,"line_end":190,"column_start":28,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":382},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8732683,"byte_end":8732692,"line_start":192,"line_end":192,"column_start":6,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8733180,"byte_end":8733192,"line_start":210,"line_end":210,"column_start":24,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8733399,"byte_end":8733411,"line_start":218,"line_end":218,"column_start":26,"column_end":38},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8733713,"byte_end":8733725,"line_start":228,"line_end":228,"column_start":47,"column_end":59},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":395},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8733741,"byte_end":8733753,"line_start":230,"line_end":230,"column_start":9,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8734353,"byte_end":8734365,"line_start":252,"line_end":252,"column_start":21,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":93},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8734522,"byte_end":8734534,"line_start":259,"line_end":259,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":93},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8734683,"byte_end":8734695,"line_start":265,"line_end":265,"column_start":28,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":93},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8736791,"byte_end":8736801,"line_start":336,"line_end":336,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8739470,"byte_end":8739490,"line_start":427,"line_end":427,"column_start":9,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8742348,"byte_end":8742366,"line_start":513,"line_end":513,"column_start":9,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8749611,"byte_end":8749617,"line_start":720,"line_end":720,"column_start":9,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8752584,"byte_end":8752599,"line_start":810,"line_end":810,"column_start":9,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8755469,"byte_end":8755475,"line_start":899,"line_end":899,"column_start":19,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8755567,"byte_end":8755582,"line_start":905,"line_end":905,"column_start":19,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8755674,"byte_end":8755694,"line_start":911,"line_end":911,"column_start":19,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":342},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8756795,"byte_end":8756813,"line_start":941,"line_end":941,"column_start":19,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8758064,"byte_end":8758084,"line_start":973,"line_end":973,"column_start":18,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":342},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8758329,"byte_end":8758347,"line_start":984,"line_end":984,"column_start":18,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8758626,"byte_end":8758634,"line_start":1001,"line_end":1001,"column_start":9,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8762291,"byte_end":8762299,"line_start":1095,"line_end":1095,"column_start":19,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8762331,"byte_end":8762339,"line_start":1097,"line_end":1097,"column_start":25,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":370},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8762440,"byte_end":8762448,"line_start":1103,"line_end":1103,"column_start":20,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":370},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8763328,"byte_end":8763336,"line_start":1130,"line_end":1130,"column_start":18,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8764482,"byte_end":8764499,"line_start":1160,"line_end":1160,"column_start":9,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8767360,"byte_end":8767377,"line_start":1234,"line_end":1234,"column_start":25,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":376},"to":{"krate":13,"index":82}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8767478,"byte_end":8767495,"line_start":1240,"line_end":1240,"column_start":20,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":376},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8768371,"byte_end":8768388,"line_start":1267,"line_end":1267,"column_start":18,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8769574,"byte_end":8769588,"line_start":1303,"line_end":1303,"column_start":9,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8769871,"byte_end":8769883,"line_start":1315,"line_end":1315,"column_start":9,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8770409,"byte_end":8770423,"line_start":1333,"line_end":1333,"column_start":31,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8770460,"byte_end":8770474,"line_start":1334,"line_end":1334,"column_start":31,"column_end":45},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8770512,"byte_end":8770524,"line_start":1336,"line_end":1336,"column_start":31,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8770561,"byte_end":8770573,"line_start":1337,"line_end":1337,"column_start":31,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\mpsc\\mod.rs","byte_start":8770586,"byte_end":8770591,"line_start":1339,"line_end":1339,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8778711,"byte_end":8778719,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8778744,"byte_end":8778750,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8781939,"byte_end":8781944,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8790468,"byte_end":8790474,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8792814,"byte_end":8792820,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793231,"byte_end":8793243,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":482},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793592,"byte_end":8793600,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793764,"byte_end":8793772,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":490},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8793785,"byte_end":8793793,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794722,"byte_end":8794730,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8794947,"byte_end":8794955,"line_start":464,"line_end":464,"column_start":25,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":461},"to":{"krate":13,"index":17}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-channel-0.3.14\\src\\oneshot.rs","byte_start":8795296,"byte_end":8795304,"line_start":479,"line_end":479,"column_start":18,"column_end":26},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2305}}]}