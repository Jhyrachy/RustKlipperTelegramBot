{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6","program":"C:\\Users\\jhyra\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=5c7ce001cee60c95","-C","extra-filename=-5c7ce001cee60c95","--out-dir","c:\\Users\\jhyra\\Documents\\VisualStudioCodeProjects\\RustKlipperTelegramBot\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\jhyra\\Documents\\VisualStudioCodeProjects\\RustKlipperTelegramBot\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\jhyra\\Documents\\VisualStudioCodeProjects\\RustKlipperTelegramBot\\target\\rls\\debug\\deps\\libbytes-73309e1d71596ccc.rmeta","--extern","futures_core=c:\\Users\\jhyra\\Documents\\VisualStudioCodeProjects\\RustKlipperTelegramBot\\target\\rls\\debug\\deps\\libfutures_core-865c4164441fc340.rmeta","--extern","futures_sink=c:\\Users\\jhyra\\Documents\\VisualStudioCodeProjects\\RustKlipperTelegramBot\\target\\rls\\debug\\deps\\libfutures_sink-e502a7438efe0b22.rmeta","--extern","log=c:\\Users\\jhyra\\Documents\\VisualStudioCodeProjects\\RustKlipperTelegramBot\\target\\rls\\debug\\deps\\liblog-ed5c7f46bce7543e.rmeta","--extern","pin_project_lite=c:\\Users\\jhyra\\Documents\\VisualStudioCodeProjects\\RustKlipperTelegramBot\\target\\rls\\debug\\deps\\libpin_project_lite-9f6b5fd3dd0846de.rmeta","--extern","tokio=c:\\Users\\jhyra\\Documents\\VisualStudioCodeProjects\\RustKlipperTelegramBot\\target\\rls\\debug\\deps\\libtokio-bd6c2d60337d0965.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\jhyra\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\jhyra\\Documents\\VisualStudioCodeProjects\\RustKlipperTelegramBot\\target\\rls\\debug\\deps\\libtokio_util-5c7ce001cee60c95.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[3797906611941626366,40724368712641068]},"crate_root":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src","external_crates":[{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":13,"id":{"name":"futures_core","disambiguator":[15248096290050914236,18349819586359219412]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":14,"id":{"name":"futures_sink","disambiguator":[2206720092815473754,991270880428871271]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":15,"id":{"name":"tokio","disambiguator":[10816571516463149316,8117941673217874754]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":16,"id":{"name":"parking_lot","disambiguator":[16554016528898172413,10938545368104415859]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":17,"id":{"name":"instant","disambiguator":[10972160104268623451,38161244861932589]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":18,"id":{"name":"cfg_if","disambiguator":[5645197522646515231,12829599349970567115]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":19,"id":{"name":"lock_api","disambiguator":[18195660619300389925,2012018261332695030]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":20,"id":{"name":"scopeguard","disambiguator":[429372990002042441,15390206183276144831]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":21,"id":{"name":"parking_lot_core","disambiguator":[11449533719004784939,17755915198866089160]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":22,"id":{"name":"smallvec","disambiguator":[10335179676509000343,5325238430108600201]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":23,"id":{"name":"winapi","disambiguator":[3613494496308361524,11307226192383768212]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","num":24,"id":{"name":"pin_project_lite","disambiguator":[16340868828397587493,3552170950584807246]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":25,"id":{"name":"mio","disambiguator":[6154632151618933614,10041228994153838110]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","num":26,"id":{"name":"log","disambiguator":[8434180752542844576,7478564355566721133]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":27,"id":{"name":"ntapi","disambiguator":[15662419973319280054,9124898052921274883]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":28,"id":{"name":"miow","disambiguator":[6860213811398438663,1906639625590248751]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","num":29,"id":{"name":"bytes","disambiguator":[8388914306686382039,9733002284195886490]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":30,"id":{"name":"once_cell","disambiguator":[1318278357116249413,16031921589002200882]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":31,"id":{"name":"tokio_macros","disambiguator":[8541601053568808545,3285940916980333138]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":32,"id":{"name":"memchr","disambiguator":[15558268311928990927,6753272335130109196]}},{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","num":33,"id":{"name":"num_cpus","disambiguator":[14864963375272620296,8147215962498545620]}}],"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635494,"byte_end":11635504,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635543,"byte_end":11635550,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635589,"byte_end":11635596,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635758,"byte_end":11635764,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635766,"byte_end":11635777,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635825,"byte_end":11635835,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635884,"byte_end":11635895,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635957,"byte_end":11635977,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635979,"byte_end":11636004,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11636053,"byte_end":11636063,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11636065,"byte_end":11636080,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11636145,"byte_end":11636162,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11636164,"byte_end":11636186,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6701,"byte_end":6718,"line_start":4,"line_end":4,"column_start":30,"column_end":47},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6720,"byte_end":6745,"line_start":4,"line_end":4,"column_start":49,"column_end":74},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6808,"byte_end":6818,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6865,"byte_end":6878,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6921,"byte_end":6938,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":12}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":346},{"krate":0,"index":12},{"krate":0,"index":274},{"krate":0,"index":321}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":356,"byte_end":393,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":394,"byte_end":397,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":398,"byte_end":455,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":456,"byte_end":520,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":521,"byte_end":596,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":597,"byte_end":600,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":601,"byte_end":637,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\cfg.rs","byte_start":5445,"byte_end":5470,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625222,"byte_end":11625275,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625276,"byte_end":11625279,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625280,"byte_end":11625355,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625356,"byte_end":11625421,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625422,"byte_end":11625425,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625426,"byte_end":11625506,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625507,"byte_end":11625582,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625583,"byte_end":11625631,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625632,"byte_end":11625635,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625636,"byte_end":11625659,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625660,"byte_end":11625663,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625664,"byte_end":11625743,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625744,"byte_end":11625823,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625824,"byte_end":11625895,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625896,"byte_end":11625966,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11625967,"byte_end":11626045,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626046,"byte_end":11626122,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626123,"byte_end":11626156,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626157,"byte_end":11626160,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626161,"byte_end":11626241,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626242,"byte_end":11626322,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626323,"byte_end":11626373,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626374,"byte_end":11626377,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626378,"byte_end":11626429,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626430,"byte_end":11626479,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626480,"byte_end":11626531,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626532,"byte_end":11626535,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626536,"byte_end":11626601,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626602,"byte_end":11626605,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626606,"byte_end":11626683,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626684,"byte_end":11626725,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626726,"byte_end":11626729,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626730,"byte_end":11626810,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626811,"byte_end":11626890,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626891,"byte_end":11626969,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11626970,"byte_end":11627049,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627050,"byte_end":11627064,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627065,"byte_end":11627068,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627069,"byte_end":11627148,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627149,"byte_end":11627228,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627229,"byte_end":11627246,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627247,"byte_end":11627250,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627251,"byte_end":11627328,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627329,"byte_end":11627408,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627409,"byte_end":11627486,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627487,"byte_end":11627557,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627558,"byte_end":11627607,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627608,"byte_end":11627611,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627612,"byte_end":11627625,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627626,"byte_end":11627658,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627659,"byte_end":11627726,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627727,"byte_end":11627841,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627842,"byte_end":11627879,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627880,"byte_end":11627941,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627942,"byte_end":11627991,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627992,"byte_end":11627995,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11627996,"byte_end":11628037,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628038,"byte_end":11628048,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628049,"byte_end":11628133,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628134,"byte_end":11628190,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628191,"byte_end":11628194,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628195,"byte_end":11628216,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628217,"byte_end":11628284,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628285,"byte_end":11628313,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628314,"byte_end":11628327,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628328,"byte_end":11628346,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628347,"byte_end":11628356,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628357,"byte_end":11628360,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628361,"byte_end":11628420,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628421,"byte_end":11628445,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628446,"byte_end":11628455,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628456,"byte_end":11628461,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628462,"byte_end":11628470,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628471,"byte_end":11628478,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628479,"byte_end":11628553,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628554,"byte_end":11628557,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628558,"byte_end":11628580,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628581,"byte_end":11628584,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628585,"byte_end":11628662,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628663,"byte_end":11628739,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628740,"byte_end":11628819,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628820,"byte_end":11628874,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628875,"byte_end":11628878,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628879,"byte_end":11628923,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628924,"byte_end":11628931,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628932,"byte_end":11628967,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11628968,"byte_end":11628999,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629000,"byte_end":11629003,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629004,"byte_end":11629033,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629034,"byte_end":11629037,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629038,"byte_end":11629077,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629078,"byte_end":11629081,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629082,"byte_end":11629120,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629121,"byte_end":11629148,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629149,"byte_end":11629185,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629186,"byte_end":11629189,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629190,"byte_end":11629208,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629209,"byte_end":11629231,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629232,"byte_end":11629262,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629263,"byte_end":11629317,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629318,"byte_end":11629348,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629349,"byte_end":11629406,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629407,"byte_end":11629439,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629440,"byte_end":11629453,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629454,"byte_end":11629457,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629458,"byte_end":11629492,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629493,"byte_end":11629537,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629538,"byte_end":11629590,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629591,"byte_end":11629658,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629659,"byte_end":11629662,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629663,"byte_end":11629737,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629738,"byte_end":11629804,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629805,"byte_end":11629834,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629835,"byte_end":11629882,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629883,"byte_end":11629935,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11629936,"byte_end":11630007,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630008,"byte_end":11630027,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630028,"byte_end":11630041,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630042,"byte_end":11630045,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630046,"byte_end":11630085,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630086,"byte_end":11630141,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630142,"byte_end":11630160,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630161,"byte_end":11630237,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630238,"byte_end":11630304,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630305,"byte_end":11630357,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630358,"byte_end":11630361,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630362,"byte_end":11630442,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630443,"byte_end":11630468,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630469,"byte_end":11630501,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630502,"byte_end":11630515,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630516,"byte_end":11630519,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630520,"byte_end":11630592,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630593,"byte_end":11630619,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630620,"byte_end":11630671,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630672,"byte_end":11630708,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630709,"byte_end":11630712,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630713,"byte_end":11630791,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630792,"byte_end":11630835,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630836,"byte_end":11630883,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630884,"byte_end":11630920,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630921,"byte_end":11630965,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11630966,"byte_end":11631022,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631023,"byte_end":11631071,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631072,"byte_end":11631094,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631095,"byte_end":11631113,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631114,"byte_end":11631127,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631128,"byte_end":11631137,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631138,"byte_end":11631143,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631144,"byte_end":11631151,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631152,"byte_end":11631155,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631156,"byte_end":11631179,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631180,"byte_end":11631183,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631184,"byte_end":11631262,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631263,"byte_end":11631336,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631337,"byte_end":11631413,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631414,"byte_end":11631494,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631495,"byte_end":11631511,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631512,"byte_end":11631515,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631516,"byte_end":11631596,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631597,"byte_end":11631676,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631677,"byte_end":11631757,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631758,"byte_end":11631830,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631831,"byte_end":11631834,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631835,"byte_end":11631912,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631913,"byte_end":11631991,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11631992,"byte_end":11632065,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632066,"byte_end":11632132,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632133,"byte_end":11632136,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632137,"byte_end":11632150,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632151,"byte_end":11632184,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632185,"byte_end":11632219,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632220,"byte_end":11632257,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632258,"byte_end":11632325,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632326,"byte_end":11632361,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632362,"byte_end":11632423,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632424,"byte_end":11632470,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632471,"byte_end":11632532,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632533,"byte_end":11632536,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632537,"byte_end":11632565,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632566,"byte_end":11632569,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632570,"byte_end":11632611,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632612,"byte_end":11632622,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632623,"byte_end":11632647,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632648,"byte_end":11632722,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632723,"byte_end":11632765,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632766,"byte_end":11632780,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632781,"byte_end":11632838,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632839,"byte_end":11632888,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632889,"byte_end":11632903,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632904,"byte_end":11632941,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632942,"byte_end":11632993,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11632994,"byte_end":11633040,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633041,"byte_end":11633071,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633072,"byte_end":11633086,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633087,"byte_end":11633096,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633097,"byte_end":11633102,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633103,"byte_end":11633110,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633111,"byte_end":11633118,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633119,"byte_end":11633194,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633195,"byte_end":11633268,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633269,"byte_end":11633311,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633312,"byte_end":11633315,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633316,"byte_end":11633338,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633339,"byte_end":11633342,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633343,"byte_end":11633420,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633421,"byte_end":11633497,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633498,"byte_end":11633574,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633575,"byte_end":11633598,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633599,"byte_end":11633602,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633603,"byte_end":11633648,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633649,"byte_end":11633656,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633657,"byte_end":11633692,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633693,"byte_end":11633717,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633718,"byte_end":11633721,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633722,"byte_end":11633751,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633752,"byte_end":11633755,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633756,"byte_end":11633795,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633796,"byte_end":11633799,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633800,"byte_end":11633846,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633847,"byte_end":11633883,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633884,"byte_end":11633887,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633888,"byte_end":11633979,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11633980,"byte_end":11634054,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634055,"byte_end":11634077,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634078,"byte_end":11634111,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634112,"byte_end":11634159,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634160,"byte_end":11634212,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634213,"byte_end":11634288,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634289,"byte_end":11634308,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634309,"byte_end":11634322,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634323,"byte_end":11634326,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634327,"byte_end":11634379,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634380,"byte_end":11634457,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634458,"byte_end":11634522,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634523,"byte_end":11634526,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634527,"byte_end":11634570,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634571,"byte_end":11634611,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634612,"byte_end":11634615,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634616,"byte_end":11634673,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634674,"byte_end":11634720,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634721,"byte_end":11634772,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634773,"byte_end":11634791,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634792,"byte_end":11634801,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634802,"byte_end":11634807,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634808,"byte_end":11634815,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634816,"byte_end":11634819,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634820,"byte_end":11634859,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634860,"byte_end":11634901,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634902,"byte_end":11634938,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634939,"byte_end":11634971,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11634972,"byte_end":11635068,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635069,"byte_end":11635120,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635121,"byte_end":11635174,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635175,"byte_end":11635218,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635219,"byte_end":11635263,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635264,"byte_end":11635312,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635313,"byte_end":11635361,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635362,"byte_end":11635408,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635409,"byte_end":11635448,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637472,"byte_end":11637482,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636315,"byte_end":11636400,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636401,"byte_end":11636404,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636405,"byte_end":11636443,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636444,"byte_end":11636482,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636483,"byte_end":11636486,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636487,"byte_end":11636500,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636501,"byte_end":11636504,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636505,"byte_end":11636586,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636587,"byte_end":11636590,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636591,"byte_end":11636630,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636631,"byte_end":11636664,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636665,"byte_end":11636694,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636695,"byte_end":11636698,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636699,"byte_end":11636706,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636707,"byte_end":11636725,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636726,"byte_end":11636756,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636757,"byte_end":11636781,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636782,"byte_end":11636789,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636790,"byte_end":11636819,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636820,"byte_end":11636872,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636873,"byte_end":11636876,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636877,"byte_end":11636895,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636896,"byte_end":11636913,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636914,"byte_end":11636994,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11636995,"byte_end":11637029,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637030,"byte_end":11637083,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637084,"byte_end":11637095,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637096,"byte_end":11637103,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637104,"byte_end":11637109,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637110,"byte_end":11637157,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637158,"byte_end":11637211,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637212,"byte_end":11637270,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637271,"byte_end":11637350,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637351,"byte_end":11637363,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637364,"byte_end":11637371,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637372,"byte_end":11637379,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637380,"byte_end":11637383,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637584,"byte_end":11637587,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637511,"byte_end":11637572,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639587,"byte_end":11639594,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638302,"byte_end":11638337,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638338,"byte_end":11638341,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638342,"byte_end":11638411,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638412,"byte_end":11638491,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638492,"byte_end":11638564,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638565,"byte_end":11638589,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638590,"byte_end":11638593,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638594,"byte_end":11638662,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638663,"byte_end":11638740,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638741,"byte_end":11638802,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638803,"byte_end":11638806,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638807,"byte_end":11638868,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638869,"byte_end":11638931,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638932,"byte_end":11638935,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11638936,"byte_end":11638999,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639000,"byte_end":11639063,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639064,"byte_end":11639143,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639144,"byte_end":11639218,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639219,"byte_end":11639238,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639239,"byte_end":11639242,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639243,"byte_end":11639311,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639312,"byte_end":11639374,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639375,"byte_end":11639450,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ reseting the entire internal state.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639451,"byte_end":11639490,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639491,"byte_end":11639494,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639495,"byte_end":11639531,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639532,"byte_end":11639576,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639642,"byte_end":11639646,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639601,"byte_end":11639632,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640412,"byte_end":11640417,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639653,"byte_end":11639705,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639710,"byte_end":11639713,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639718,"byte_end":11639787,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639792,"byte_end":11639862,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639867,"byte_end":11639913,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639918,"byte_end":11639921,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11639926,"byte_end":11640002,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640007,"byte_end":11640082,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640087,"byte_end":11640162,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640167,"byte_end":11640207,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640212,"byte_end":11640215,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640220,"byte_end":11640294,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640299,"byte_end":11640345,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640350,"byte_end":11640353,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640358,"byte_end":11640402,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643353,"byte_end":11643359,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640441,"byte_end":11640506,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640511,"byte_end":11640514,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640519,"byte_end":11640593,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640598,"byte_end":11640670,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640675,"byte_end":11640748,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640753,"byte_end":11640796,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640801,"byte_end":11640804,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640809,"byte_end":11640882,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640887,"byte_end":11640950,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11640955,"byte_end":11641030,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641035,"byte_end":11641110,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641115,"byte_end":11641138,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641143,"byte_end":11641146,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641151,"byte_end":11641223,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641228,"byte_end":11641302,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641307,"byte_end":11641377,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641382,"byte_end":11641385,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641390,"byte_end":11641458,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641463,"byte_end":11641534,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641539,"byte_end":11641619,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641624,"byte_end":11641636,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641641,"byte_end":11641644,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641649,"byte_end":11641719,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641724,"byte_end":11641799,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641804,"byte_end":11641841,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641846,"byte_end":11641849,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641854,"byte_end":11641890,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641895,"byte_end":11641939,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641944,"byte_end":11641947,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641952,"byte_end":11641975,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641980,"byte_end":11641983,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11641988,"byte_end":11642062,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642067,"byte_end":11642141,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642146,"byte_end":11642199,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642204,"byte_end":11642207,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642212,"byte_end":11642283,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642288,"byte_end":11642358,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642363,"byte_end":11642379,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642384,"byte_end":11642387,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642392,"byte_end":11642405,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642410,"byte_end":11642428,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642433,"byte_end":11642438,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642443,"byte_end":11642469,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642474,"byte_end":11642511,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642516,"byte_end":11642521,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642526,"byte_end":11642547,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642552,"byte_end":11642557,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642562,"byte_end":11642592,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642597,"byte_end":11642611,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642616,"byte_end":11642647,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642652,"byte_end":11642685,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642690,"byte_end":11642693,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642698,"byte_end":11642791,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642796,"byte_end":11642814,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642819,"byte_end":11642822,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642827,"byte_end":11642899,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642904,"byte_end":11642964,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11642969,"byte_end":11643021,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643026,"byte_end":11643088,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643093,"byte_end":11643160,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643165,"byte_end":11643168,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643173,"byte_end":11643201,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643206,"byte_end":11643215,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643220,"byte_end":11643225,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643230,"byte_end":11643237,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643242,"byte_end":11643245,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643250,"byte_end":11643319,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643324,"byte_end":11643345,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11644525,"byte_end":11644535,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643440,"byte_end":11643512,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643517,"byte_end":11643566,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643571,"byte_end":11643574,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643579,"byte_end":11643647,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643652,"byte_end":11643719,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643724,"byte_end":11643792,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643797,"byte_end":11643873,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643878,"byte_end":11643944,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643949,"byte_end":11643952,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11643957,"byte_end":11644025,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11644030,"byte_end":11644105,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11644110,"byte_end":11644185,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11644190,"byte_end":11644262,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11644267,"byte_end":11644309,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11644314,"byte_end":11644317,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11644322,"byte_end":11644397,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11644402,"byte_end":11644480,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11644485,"byte_end":11644517,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11646143,"byte_end":11646149,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11644953,"byte_end":11645033,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645038,"byte_end":11645114,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645119,"byte_end":11645122,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645127,"byte_end":11645202,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645207,"byte_end":11645277,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645282,"byte_end":11645353,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645358,"byte_end":11645430,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645435,"byte_end":11645493,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645498,"byte_end":11645501,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645506,"byte_end":11645575,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645580,"byte_end":11645655,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645660,"byte_end":11645736,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645741,"byte_end":11645763,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645768,"byte_end":11645771,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645776,"byte_end":11645849,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645854,"byte_end":11645927,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11645932,"byte_end":11646008,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11646013,"byte_end":11646016,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11646021,"byte_end":11646057,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11646062,"byte_end":11646094,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\decoder.rs","byte_start":11646099,"byte_end":11646135,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646483,"byte_end":11646490,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646328,"byte_end":11646400,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646401,"byte_end":11646421,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646422,"byte_end":11646425,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646426,"byte_end":11646472,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646755,"byte_end":11646760,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646503,"byte_end":11646535,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646540,"byte_end":11646543,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646548,"byte_end":11646625,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646630,"byte_end":11646686,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646691,"byte_end":11646694,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646699,"byte_end":11646745,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11647111,"byte_end":11647117,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646784,"byte_end":11646829,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646834,"byte_end":11646837,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646842,"byte_end":11646916,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11646921,"byte_end":11647001,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11647006,"byte_end":11647044,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11647049,"byte_end":11647052,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\encoder.rs","byte_start":11647057,"byte_end":11647103,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11657934,"byte_end":11657940,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1121}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11659713,"byte_end":11659716,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658082,"byte_end":11658162,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658167,"byte_end":11658248,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658253,"byte_end":11658256,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658261,"byte_end":11658336,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658341,"byte_end":11658411,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658416,"byte_end":11658485,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658490,"byte_end":11658562,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658567,"byte_end":11658625,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658630,"byte_end":11658633,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658638,"byte_end":11658709,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658714,"byte_end":11658791,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658796,"byte_end":11658872,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658877,"byte_end":11658899,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658904,"byte_end":11658907,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658912,"byte_end":11658985,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658990,"byte_end":11659063,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11659068,"byte_end":11659144,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11659149,"byte_end":11659152,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11659157,"byte_end":11659233,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11659238,"byte_end":11659314,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11659319,"byte_end":11659394,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11659399,"byte_end":11659434,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11659439,"byte_end":11659442,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11659447,"byte_end":11659483,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11659488,"byte_end":11659520,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11659525,"byte_end":11659562,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11659567,"byte_end":11659605,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11659610,"byte_end":11659701,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11661324,"byte_end":11661337,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11659929,"byte_end":11660009,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660014,"byte_end":11660095,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660100,"byte_end":11660149,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660154,"byte_end":11660157,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660162,"byte_end":11660237,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660242,"byte_end":11660312,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660317,"byte_end":11660386,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660391,"byte_end":11660463,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660468,"byte_end":11660526,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660531,"byte_end":11660534,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660539,"byte_end":11660610,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660615,"byte_end":11660692,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660697,"byte_end":11660773,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660778,"byte_end":11660800,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660805,"byte_end":11660808,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660813,"byte_end":11660886,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660891,"byte_end":11660964,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11660969,"byte_end":11661045,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11661050,"byte_end":11661053,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11661058,"byte_end":11661094,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11661099,"byte_end":11661131,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11661136,"byte_end":11661173,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11661178,"byte_end":11661216,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11661221,"byte_end":11661312,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11663440,"byte_end":11663450,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11661863,"byte_end":11661943,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11661948,"byte_end":11662029,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662034,"byte_end":11662037,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662042,"byte_end":11662117,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662122,"byte_end":11662192,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662197,"byte_end":11662268,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662273,"byte_end":11662345,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662350,"byte_end":11662408,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662413,"byte_end":11662416,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662421,"byte_end":11662492,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662497,"byte_end":11662574,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662579,"byte_end":11662655,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662660,"byte_end":11662682,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662687,"byte_end":11662690,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662695,"byte_end":11662774,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662779,"byte_end":11662856,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662861,"byte_end":11662864,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662869,"byte_end":11662942,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11662947,"byte_end":11663020,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11663025,"byte_end":11663101,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11663106,"byte_end":11663109,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11663114,"byte_end":11663150,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11663155,"byte_end":11663187,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11663192,"byte_end":11663230,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11663235,"byte_end":11663273,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11663278,"byte_end":11663332,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11663337,"byte_end":11663428,"line_start":144,"line_end":144,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664085,"byte_end":11664092,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11663802,"byte_end":11663865,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11663870,"byte_end":11663883,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11663888,"byte_end":11663891,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11663896,"byte_end":11663971,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11663976,"byte_end":11664046,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664051,"byte_end":11664073,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664436,"byte_end":11664443,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664145,"byte_end":11664216,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664221,"byte_end":11664234,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664239,"byte_end":11664242,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664247,"byte_end":11664322,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664327,"byte_end":11664397,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664402,"byte_end":11664424,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664806,"byte_end":11664817,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664508,"byte_end":11664586,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664591,"byte_end":11664604,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664609,"byte_end":11664612,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664617,"byte_end":11664692,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664697,"byte_end":11664767,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664772,"byte_end":11664794,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665164,"byte_end":11665169,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664913,"byte_end":11664971,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664976,"byte_end":11664989,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11664994,"byte_end":11664997,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665002,"byte_end":11665076,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665081,"byte_end":11665152,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665481,"byte_end":11665490,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665222,"byte_end":11665288,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665293,"byte_end":11665306,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665311,"byte_end":11665314,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665319,"byte_end":11665393,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665398,"byte_end":11665469,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665610,"byte_end":11665621,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665555,"byte_end":11665598,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665756,"byte_end":11665771,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665693,"byte_end":11665744,"line_start":211,"line_end":211,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665911,"byte_end":11665923,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665855,"byte_end":11665899,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11666060,"byte_end":11666076,"line_start":222,"line_end":222,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11665996,"byte_end":11666048,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11666426,"byte_end":11666436,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11666161,"byte_end":11666224,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11666229,"byte_end":11666232,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11666237,"byte_end":11666312,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11666317,"byte_end":11666387,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11666392,"byte_end":11666414,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11666808,"byte_end":11666818,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11666486,"byte_end":11666560,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11666565,"byte_end":11666606,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11666611,"byte_end":11666614,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11666619,"byte_end":11666694,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11666699,"byte_end":11666769,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11666774,"byte_end":11666796,"line_start":240,"line_end":240,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668792,"byte_end":11668803,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668477,"byte_end":11668548,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668549,"byte_end":11668621,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668622,"byte_end":11668682,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668683,"byte_end":11668686,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668687,"byte_end":11668723,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668741,"byte_end":11668780,"line_start":310,"line_end":310,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668889,"byte_end":11668891,"line_start":313,"line_end":313,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668816,"byte_end":11668880,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668923,"byte_end":11668928,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668901,"byte_end":11668914,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668993,"byte_end":11669001,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668938,"byte_end":11668984,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11669088,"byte_end":11669097,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11669018,"byte_end":11669079,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11669330,"byte_end":11669333,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11669278,"byte_end":11669318,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11670062,"byte_end":11670072,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1080}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11670323,"byte_end":11670326,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11670255,"byte_end":11670311,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11670674,"byte_end":11670687,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11670558,"byte_end":11670640,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11670645,"byte_end":11670662,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671401,"byte_end":11671408,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671114,"byte_end":11671177,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671182,"byte_end":11671199,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671204,"byte_end":11671207,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671212,"byte_end":11671287,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671292,"byte_end":11671362,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671367,"byte_end":11671389,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671756,"byte_end":11671763,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671461,"byte_end":11671532,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671537,"byte_end":11671554,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671559,"byte_end":11671562,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671567,"byte_end":11671642,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671647,"byte_end":11671717,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671722,"byte_end":11671744,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672130,"byte_end":11672141,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671828,"byte_end":11671906,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671911,"byte_end":11671928,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671933,"byte_end":11671936,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671941,"byte_end":11672016,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672021,"byte_end":11672091,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672096,"byte_end":11672118,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672506,"byte_end":11672516,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672237,"byte_end":11672304,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672309,"byte_end":11672312,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672317,"byte_end":11672392,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672397,"byte_end":11672467,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672472,"byte_end":11672494,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672628,"byte_end":11672635,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672566,"byte_end":11672616,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672758,"byte_end":11672769,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672688,"byte_end":11672746,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672889,"byte_end":11672900,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672834,"byte_end":11672877,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11673030,"byte_end":11673045,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11672967,"byte_end":11673018,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675146,"byte_end":11675157,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1039}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675364,"byte_end":11675367,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675295,"byte_end":11675352,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675925,"byte_end":11675932,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675637,"byte_end":11675700,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675705,"byte_end":11675723,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675728,"byte_end":11675731,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675736,"byte_end":11675811,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675816,"byte_end":11675886,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675891,"byte_end":11675913,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676281,"byte_end":11676288,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675985,"byte_end":11676056,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676061,"byte_end":11676079,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676084,"byte_end":11676087,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676092,"byte_end":11676167,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676172,"byte_end":11676242,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676247,"byte_end":11676269,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676656,"byte_end":11676667,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676353,"byte_end":11676431,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676436,"byte_end":11676454,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676459,"byte_end":11676462,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676467,"byte_end":11676542,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676547,"byte_end":11676617,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676622,"byte_end":11676644,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11677033,"byte_end":11677043,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676763,"byte_end":11676831,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676836,"byte_end":11676839,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676844,"byte_end":11676919,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676924,"byte_end":11676994,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11676999,"byte_end":11677021,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11677155,"byte_end":11677162,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11677093,"byte_end":11677143,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11677285,"byte_end":11677296,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11677215,"byte_end":11677273,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11677417,"byte_end":11677429,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11677361,"byte_end":11677405,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11677560,"byte_end":11677576,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11677496,"byte_end":11677548,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":818},{"krate":0,"index":828},{"krate":0,"index":826},{"krate":0,"index":825},{"krate":0,"index":644},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":844},{"krate":0,"index":842},{"krate":0,"index":841},{"krate":0,"index":646},{"krate":0,"index":653},{"krate":0,"index":657},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679103,"byte_end":11679155,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679156,"byte_end":11679159,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679160,"byte_end":11679230,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679231,"byte_end":11679289,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679290,"byte_end":11679362,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679363,"byte_end":11679433,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679434,"byte_end":11679501,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679502,"byte_end":11679505,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679506,"byte_end":11679527,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679528,"byte_end":11679531,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679532,"byte_end":11679607,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679608,"byte_end":11679679,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679680,"byte_end":11679751,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679752,"byte_end":11679822,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679823,"byte_end":11679863,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679864,"byte_end":11679867,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679868,"byte_end":11679875,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679876,"byte_end":11679919,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679920,"byte_end":11679978,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679979,"byte_end":11679982,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11679983,"byte_end":11680038,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680039,"byte_end":11680081,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680082,"byte_end":11680087,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680088,"byte_end":11680140,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680141,"byte_end":11680146,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680147,"byte_end":11680169,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680170,"byte_end":11680177,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680178,"byte_end":11680181,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680182,"byte_end":11680254,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680255,"byte_end":11680326,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680327,"byte_end":11680346,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680347,"byte_end":11680350,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680351,"byte_end":11680362,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680363,"byte_end":11680412,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680413,"byte_end":11680462,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680463,"byte_end":11680512,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680513,"byte_end":11680520,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680521,"byte_end":11680524,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680525,"byte_end":11680563,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680564,"byte_end":11680567,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680568,"byte_end":11680575,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680576,"byte_end":11680619,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680620,"byte_end":11680678,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680679,"byte_end":11680682,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680683,"byte_end":11680708,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680709,"byte_end":11680730,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680731,"byte_end":11680734,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680735,"byte_end":11680811,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680812,"byte_end":11680821,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680822,"byte_end":11680864,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680865,"byte_end":11680870,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680871,"byte_end":11680944,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680945,"byte_end":11680992,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680993,"byte_end":11680996,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11680997,"byte_end":11681034,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681035,"byte_end":11681049,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681050,"byte_end":11681055,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681056,"byte_end":11681063,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681064,"byte_end":11681067,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681068,"byte_end":11681110,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681111,"byte_end":11681114,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681115,"byte_end":11681126,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681127,"byte_end":11681166,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681167,"byte_end":11681206,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681207,"byte_end":11681246,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681247,"byte_end":11681254,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681255,"byte_end":11681258,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681259,"byte_end":11681273,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681274,"byte_end":11681277,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681278,"byte_end":11681353,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681354,"byte_end":11681427,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681428,"byte_end":11681494,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681495,"byte_end":11681564,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681565,"byte_end":11681630,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681631,"byte_end":11681634,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681635,"byte_end":11681651,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681652,"byte_end":11681655,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681656,"byte_end":11681732,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681733,"byte_end":11681774,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681775,"byte_end":11681778,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681779,"byte_end":11681786,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681787,"byte_end":11681818,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681819,"byte_end":11681869,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681870,"byte_end":11681911,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681912,"byte_end":11681947,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681948,"byte_end":11681996,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11681997,"byte_end":11682028,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682029,"byte_end":11682077,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682078,"byte_end":11682127,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682128,"byte_end":11682150,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682151,"byte_end":11682158,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682159,"byte_end":11682181,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682182,"byte_end":11682189,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682190,"byte_end":11682193,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682194,"byte_end":11682242,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682243,"byte_end":11682246,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682247,"byte_end":11682258,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682259,"byte_end":11682311,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682312,"byte_end":11682377,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682378,"byte_end":11682443,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682444,"byte_end":11682509,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682510,"byte_end":11682517,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682518,"byte_end":11682521,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682522,"byte_end":11682598,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682599,"byte_end":11682673,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682674,"byte_end":11682746,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682747,"byte_end":11682823,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682824,"byte_end":11682866,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682867,"byte_end":11682870,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682871,"byte_end":11682887,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682888,"byte_end":11682891,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682892,"byte_end":11682967,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11682968,"byte_end":11683009,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683010,"byte_end":11683013,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683014,"byte_end":11683021,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683022,"byte_end":11683053,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683054,"byte_end":11683104,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683105,"byte_end":11683146,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683147,"byte_end":11683182,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683183,"byte_end":11683231,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683232,"byte_end":11683263,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683264,"byte_end":11683312,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683313,"byte_end":11683372,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683373,"byte_end":11683395,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683396,"byte_end":11683403,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683404,"byte_end":11683426,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683427,"byte_end":11683434,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683435,"byte_end":11683438,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683439,"byte_end":11683487,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683488,"byte_end":11683491,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683492,"byte_end":11683503,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683504,"byte_end":11683553,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683554,"byte_end":11683608,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683609,"byte_end":11683663,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683664,"byte_end":11683718,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683719,"byte_end":11683726,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683727,"byte_end":11683730,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683731,"byte_end":11683804,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683805,"byte_end":11683872,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683873,"byte_end":11683876,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683877,"byte_end":11683893,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683894,"byte_end":11683897,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683898,"byte_end":11683974,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11683975,"byte_end":11684047,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684048,"byte_end":11684087,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684088,"byte_end":11684091,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684092,"byte_end":11684099,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684100,"byte_end":11684131,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684132,"byte_end":11684182,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684183,"byte_end":11684224,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684225,"byte_end":11684260,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684261,"byte_end":11684309,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684310,"byte_end":11684341,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684342,"byte_end":11684389,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684390,"byte_end":11684410,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684411,"byte_end":11684433,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684434,"byte_end":11684441,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684442,"byte_end":11684464,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684465,"byte_end":11684472,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684473,"byte_end":11684476,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684477,"byte_end":11684525,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684526,"byte_end":11684529,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684530,"byte_end":11684541,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684542,"byte_end":11684594,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684595,"byte_end":11684660,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684661,"byte_end":11684726,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684727,"byte_end":11684792,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684793,"byte_end":11684800,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684801,"byte_end":11684804,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684805,"byte_end":11684877,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684878,"byte_end":11684953,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11684954,"byte_end":11685026,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685027,"byte_end":11685103,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685104,"byte_end":11685177,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685178,"byte_end":11685181,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685182,"byte_end":11685198,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685199,"byte_end":11685202,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685203,"byte_end":11685277,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685278,"byte_end":11685345,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685346,"byte_end":11685349,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685350,"byte_end":11685357,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685358,"byte_end":11685389,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685390,"byte_end":11685440,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685441,"byte_end":11685482,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685483,"byte_end":11685518,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685519,"byte_end":11685567,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685568,"byte_end":11685599,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685600,"byte_end":11685648,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685649,"byte_end":11685669,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685670,"byte_end":11685692,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685693,"byte_end":11685700,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685701,"byte_end":11685723,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685724,"byte_end":11685731,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685732,"byte_end":11685735,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685736,"byte_end":11685784,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685785,"byte_end":11685788,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685789,"byte_end":11685800,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685801,"byte_end":11685827,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685828,"byte_end":11685873,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685874,"byte_end":11685919,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685920,"byte_end":11685965,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685966,"byte_end":11685969,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685970,"byte_end":11685998,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11685999,"byte_end":11686044,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686045,"byte_end":11686090,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686091,"byte_end":11686136,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686137,"byte_end":11686144,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686145,"byte_end":11686148,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686149,"byte_end":11686221,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686222,"byte_end":11686298,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686299,"byte_end":11686369,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686370,"byte_end":11686439,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686440,"byte_end":11686477,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686478,"byte_end":11686481,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686482,"byte_end":11686556,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686557,"byte_end":11686611,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686612,"byte_end":11686615,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686616,"byte_end":11686632,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686633,"byte_end":11686636,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686637,"byte_end":11686710,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686711,"byte_end":11686787,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686788,"byte_end":11686862,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686863,"byte_end":11686876,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686877,"byte_end":11686880,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686881,"byte_end":11686888,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686889,"byte_end":11686920,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686921,"byte_end":11686971,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11686972,"byte_end":11687013,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687014,"byte_end":11687049,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687050,"byte_end":11687099,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687100,"byte_end":11687131,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687132,"byte_end":11687180,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687181,"byte_end":11687225,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687226,"byte_end":11687248,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687249,"byte_end":11687256,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687257,"byte_end":11687279,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687280,"byte_end":11687287,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687288,"byte_end":11687291,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687292,"byte_end":11687340,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687341,"byte_end":11687344,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687345,"byte_end":11687356,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687357,"byte_end":11687383,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687384,"byte_end":11687434,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687435,"byte_end":11687485,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687486,"byte_end":11687536,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687537,"byte_end":11687540,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687541,"byte_end":11687561,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687562,"byte_end":11687592,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687593,"byte_end":11687623,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687624,"byte_end":11687654,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687655,"byte_end":11687662,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687663,"byte_end":11687666,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687667,"byte_end":11687740,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687741,"byte_end":11687816,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687817,"byte_end":11687889,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687890,"byte_end":11687928,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687929,"byte_end":11687932,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11687933,"byte_end":11688007,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688008,"byte_end":11688084,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688085,"byte_end":11688158,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688159,"byte_end":11688187,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688188,"byte_end":11688191,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688192,"byte_end":11688208,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688209,"byte_end":11688212,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688213,"byte_end":11688286,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688287,"byte_end":11688363,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688364,"byte_end":11688438,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688439,"byte_end":11688511,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688512,"byte_end":11688523,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688524,"byte_end":11688527,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688528,"byte_end":11688535,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688536,"byte_end":11688567,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688568,"byte_end":11688618,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688619,"byte_end":11688660,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688661,"byte_end":11688696,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688697,"byte_end":11688746,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688747,"byte_end":11688778,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688779,"byte_end":11688844,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688845,"byte_end":11688865,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688866,"byte_end":11688888,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688889,"byte_end":11688896,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688897,"byte_end":11688904,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688905,"byte_end":11688908,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688909,"byte_end":11688957,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688958,"byte_end":11688961,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688962,"byte_end":11688973,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11688974,"byte_end":11689000,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689001,"byte_end":11689051,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689052,"byte_end":11689102,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689103,"byte_end":11689153,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689154,"byte_end":11689157,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689158,"byte_end":11689178,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689179,"byte_end":11689209,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689210,"byte_end":11689240,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689241,"byte_end":11689271,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689272,"byte_end":11689279,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689280,"byte_end":11689283,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689284,"byte_end":11689357,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689358,"byte_end":11689432,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689433,"byte_end":11689507,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689508,"byte_end":11689581,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689582,"byte_end":11689658,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689659,"byte_end":11689692,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689693,"byte_end":11689696,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689697,"byte_end":11689713,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689714,"byte_end":11689717,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689718,"byte_end":11689792,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689793,"byte_end":11689860,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689861,"byte_end":11689864,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689865,"byte_end":11689872,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689873,"byte_end":11689904,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689905,"byte_end":11689955,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689956,"byte_end":11689997,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11689998,"byte_end":11690033,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690034,"byte_end":11690082,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690083,"byte_end":11690114,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690115,"byte_end":11690162,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690163,"byte_end":11690209,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690210,"byte_end":11690232,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690233,"byte_end":11690240,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690241,"byte_end":11690263,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690264,"byte_end":11690271,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690272,"byte_end":11690275,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690276,"byte_end":11690324,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690325,"byte_end":11690328,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690329,"byte_end":11690340,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690341,"byte_end":11690397,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690398,"byte_end":11690459,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690460,"byte_end":11690521,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690522,"byte_end":11690583,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690584,"byte_end":11690591,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690592,"byte_end":11690595,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690596,"byte_end":11690670,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690671,"byte_end":11690691,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690692,"byte_end":11690695,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690696,"byte_end":11690710,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690711,"byte_end":11690714,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690715,"byte_end":11690790,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690791,"byte_end":11690863,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690864,"byte_end":11690932,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11690933,"byte_end":11691009,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691010,"byte_end":11691051,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691052,"byte_end":11691055,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691056,"byte_end":11691126,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691127,"byte_end":11691145,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691146,"byte_end":11691149,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691150,"byte_end":11691157,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691158,"byte_end":11691190,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691191,"byte_end":11691241,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691242,"byte_end":11691286,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691287,"byte_end":11691300,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691301,"byte_end":11691336,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691337,"byte_end":11691368,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691369,"byte_end":11691392,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691393,"byte_end":11691400,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691401,"byte_end":11691423,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691424,"byte_end":11691431,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691432,"byte_end":11691435,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691436,"byte_end":11691486,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691487,"byte_end":11691490,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691491,"byte_end":11691502,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691503,"byte_end":11691536,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691537,"byte_end":11691570,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691571,"byte_end":11691604,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691605,"byte_end":11691612,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691613,"byte_end":11691616,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691617,"byte_end":11691686,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691687,"byte_end":11691724,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691725,"byte_end":11691764,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691765,"byte_end":11691810,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691811,"byte_end":11691858,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691859,"byte_end":11691889,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11691890,"byte_end":11691923,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11692485,"byte_end":11692492,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11692167,"byte_end":11692222,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11692223,"byte_end":11692226,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11692227,"byte_end":11692302,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11692303,"byte_end":11692383,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11692384,"byte_end":11692443,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693163,"byte_end":11693188,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":645}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693078,"byte_end":11693151,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693533,"byte_end":11693553,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693209,"byte_end":11693283,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693284,"byte_end":11693287,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693288,"byte_end":11693367,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693368,"byte_end":11693411,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693412,"byte_end":11693415,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693416,"byte_end":11693469,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693470,"byte_end":11693473,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693474,"byte_end":11693504,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693897,"byte_end":11693900,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693806,"byte_end":11693885,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694127,"byte_end":11694134,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694024,"byte_end":11694099,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694104,"byte_end":11694115,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694356,"byte_end":11694372,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694184,"byte_end":11694225,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694230,"byte_end":11694233,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694238,"byte_end":11694311,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694316,"byte_end":11694344,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694793,"byte_end":11694813,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694437,"byte_end":11694471,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694476,"byte_end":11694479,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694484,"byte_end":11694554,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694559,"byte_end":11694634,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694639,"byte_end":11694711,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11694716,"byte_end":11694781,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700068,"byte_end":11700071,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699526,"byte_end":11699601,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699606,"byte_end":11699617,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699622,"byte_end":11699625,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699630,"byte_end":11699644,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699649,"byte_end":11699652,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699657,"byte_end":11699664,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699669,"byte_end":11699700,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699705,"byte_end":11699753,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699758,"byte_end":11699761,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699766,"byte_end":11699807,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699812,"byte_end":11699847,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699852,"byte_end":11699883,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699888,"byte_end":11699919,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699924,"byte_end":11699953,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699958,"byte_end":11699978,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699983,"byte_end":11700005,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700010,"byte_end":11700017,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700022,"byte_end":11700044,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700049,"byte_end":11700056,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701256,"byte_end":11701266,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700735,"byte_end":11700784,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700789,"byte_end":11700792,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700797,"byte_end":11700829,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700834,"byte_end":11700837,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700842,"byte_end":11700910,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700915,"byte_end":11700918,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700923,"byte_end":11700937,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700942,"byte_end":11700945,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700950,"byte_end":11700957,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700962,"byte_end":11700993,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11700998,"byte_end":11701046,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701051,"byte_end":11701054,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701059,"byte_end":11701100,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701105,"byte_end":11701140,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701145,"byte_end":11701166,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701171,"byte_end":11701193,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701198,"byte_end":11701205,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701210,"byte_end":11701232,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701237,"byte_end":11701244,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701898,"byte_end":11701911,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701365,"byte_end":11701417,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701422,"byte_end":11701425,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701430,"byte_end":11701468,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701473,"byte_end":11701476,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701481,"byte_end":11701549,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701554,"byte_end":11701557,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701562,"byte_end":11701576,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701581,"byte_end":11701584,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701589,"byte_end":11701596,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701601,"byte_end":11701632,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701637,"byte_end":11701685,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701690,"byte_end":11701693,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701698,"byte_end":11701739,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701744,"byte_end":11701779,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701784,"byte_end":11701808,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701813,"byte_end":11701835,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701840,"byte_end":11701847,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701852,"byte_end":11701874,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11701879,"byte_end":11701886,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702544,"byte_end":11702557,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702011,"byte_end":11702063,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702068,"byte_end":11702071,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702076,"byte_end":11702114,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702119,"byte_end":11702122,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702127,"byte_end":11702195,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702200,"byte_end":11702203,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702208,"byte_end":11702222,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702227,"byte_end":11702230,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702235,"byte_end":11702242,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702247,"byte_end":11702278,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702283,"byte_end":11702331,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702336,"byte_end":11702339,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702344,"byte_end":11702385,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702390,"byte_end":11702425,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702430,"byte_end":11702454,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702459,"byte_end":11702481,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702486,"byte_end":11702493,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702498,"byte_end":11702520,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702525,"byte_end":11702532,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703638,"byte_end":11703654,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702726,"byte_end":11702755,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702760,"byte_end":11702763,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702768,"byte_end":11702840,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702845,"byte_end":11702870,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702875,"byte_end":11702878,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702883,"byte_end":11702955,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11702960,"byte_end":11703029,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703034,"byte_end":11703107,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703112,"byte_end":11703124,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703129,"byte_end":11703132,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703137,"byte_end":11703212,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703217,"byte_end":11703278,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703283,"byte_end":11703286,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703291,"byte_end":11703305,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703310,"byte_end":11703313,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703318,"byte_end":11703325,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703330,"byte_end":11703361,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703366,"byte_end":11703414,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703419,"byte_end":11703422,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703427,"byte_end":11703468,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703473,"byte_end":11703508,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703513,"byte_end":11703548,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703553,"byte_end":11703575,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703580,"byte_end":11703587,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703592,"byte_end":11703614,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703619,"byte_end":11703626,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704315,"byte_end":11704334,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703751,"byte_end":11703814,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703819,"byte_end":11703822,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703827,"byte_end":11703878,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703883,"byte_end":11703886,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703891,"byte_end":11703959,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703964,"byte_end":11703967,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703972,"byte_end":11703986,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703991,"byte_end":11703994,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11703999,"byte_end":11704006,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704011,"byte_end":11704042,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704047,"byte_end":11704095,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704100,"byte_end":11704103,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704108,"byte_end":11704149,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704154,"byte_end":11704189,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704194,"byte_end":11704225,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704230,"byte_end":11704252,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704257,"byte_end":11704264,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704269,"byte_end":11704291,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704296,"byte_end":11704303,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704993,"byte_end":11705012,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704503,"byte_end":11704569,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704574,"byte_end":11704577,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704582,"byte_end":11704637,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704642,"byte_end":11704645,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704650,"byte_end":11704664,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704669,"byte_end":11704672,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704677,"byte_end":11704684,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704689,"byte_end":11704720,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704725,"byte_end":11704773,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704778,"byte_end":11704781,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704786,"byte_end":11704827,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704832,"byte_end":11704867,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704872,"byte_end":11704903,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704908,"byte_end":11704930,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704935,"byte_end":11704942,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704947,"byte_end":11704969,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11704974,"byte_end":11704981,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705566,"byte_end":11705583,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705115,"byte_end":11705188,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705193,"byte_end":11705211,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705216,"byte_end":11705219,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705224,"byte_end":11705238,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705243,"byte_end":11705246,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705251,"byte_end":11705258,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705263,"byte_end":11705294,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705299,"byte_end":11705347,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705352,"byte_end":11705355,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705360,"byte_end":11705401,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705406,"byte_end":11705441,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705446,"byte_end":11705476,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705481,"byte_end":11705503,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705508,"byte_end":11705515,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705520,"byte_end":11705542,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705547,"byte_end":11705554,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706233,"byte_end":11706241,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705684,"byte_end":11705747,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705752,"byte_end":11705755,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705760,"byte_end":11705821,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705826,"byte_end":11705829,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705834,"byte_end":11705888,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705893,"byte_end":11705896,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705901,"byte_end":11705915,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705920,"byte_end":11705923,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705928,"byte_end":11705935,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705940,"byte_end":11705971,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11705976,"byte_end":11706024,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706029,"byte_end":11706032,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706037,"byte_end":11706078,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706083,"byte_end":11706118,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706123,"byte_end":11706143,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706148,"byte_end":11706170,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706175,"byte_end":11706182,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706187,"byte_end":11706209,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706214,"byte_end":11706221,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706761,"byte_end":11706770,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706339,"byte_end":11706402,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706407,"byte_end":11706410,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706415,"byte_end":11706429,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706434,"byte_end":11706437,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706442,"byte_end":11706449,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706454,"byte_end":11706502,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706507,"byte_end":11706528,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706533,"byte_end":11706568,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706573,"byte_end":11706604,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706609,"byte_end":11706640,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706645,"byte_end":11706674,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706679,"byte_end":11706699,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706704,"byte_end":11706725,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706730,"byte_end":11706737,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706742,"byte_end":11706749,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707426,"byte_end":11707434,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706922,"byte_end":11706975,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706980,"byte_end":11706983,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11706988,"byte_end":11707002,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707007,"byte_end":11707010,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707015,"byte_end":11707022,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707027,"byte_end":11707058,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707063,"byte_end":11707111,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707116,"byte_end":11707119,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707124,"byte_end":11707165,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707170,"byte_end":11707205,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707210,"byte_end":11707241,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707246,"byte_end":11707277,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707282,"byte_end":11707311,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707316,"byte_end":11707336,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707341,"byte_end":11707363,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707368,"byte_end":11707375,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707380,"byte_end":11707402,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707407,"byte_end":11707414,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708007,"byte_end":11708016,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707598,"byte_end":11707652,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707657,"byte_end":11707660,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707665,"byte_end":11707679,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707684,"byte_end":11707687,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707692,"byte_end":11707699,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707704,"byte_end":11707736,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707741,"byte_end":11707791,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707796,"byte_end":11707840,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707845,"byte_end":11707880,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707885,"byte_end":11707916,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707921,"byte_end":11707944,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707949,"byte_end":11707956,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707961,"byte_end":11707983,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11707988,"byte_end":11707995,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708625,"byte_end":11708635,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708177,"byte_end":11708226,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708231,"byte_end":11708234,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708239,"byte_end":11708253,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708258,"byte_end":11708261,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708266,"byte_end":11708273,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708278,"byte_end":11708323,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708328,"byte_end":11708378,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708383,"byte_end":11708439,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708444,"byte_end":11708457,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708462,"byte_end":11708497,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708502,"byte_end":11708533,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708538,"byte_end":11708562,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708567,"byte_end":11708574,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708579,"byte_end":11708601,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11708606,"byte_end":11708613,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11710014,"byte_end":11710024,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11709771,"byte_end":11709858,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11709859,"byte_end":11709862,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11709863,"byte_end":11709901,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11709902,"byte_end":11709940,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711124,"byte_end":11711127,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11710705,"byte_end":11710765,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11710770,"byte_end":11710773,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11710778,"byte_end":11710788,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11710793,"byte_end":11710796,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11710801,"byte_end":11710873,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11710878,"byte_end":11710951,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11710956,"byte_end":11711023,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711028,"byte_end":11711031,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711036,"byte_end":11711112,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712258,"byte_end":11712277,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711285,"byte_end":11711345,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711350,"byte_end":11711353,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711358,"byte_end":11711421,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711426,"byte_end":11711504,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711509,"byte_end":11711576,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711581,"byte_end":11711653,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711658,"byte_end":11711728,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711733,"byte_end":11711756,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711761,"byte_end":11711764,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711769,"byte_end":11711779,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711784,"byte_end":11711787,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711792,"byte_end":11711867,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711872,"byte_end":11711945,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11711950,"byte_end":11712026,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712031,"byte_end":11712104,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712109,"byte_end":11712179,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712184,"byte_end":11712187,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712192,"byte_end":11712246,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712843,"byte_end":11712853,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712405,"byte_end":11712455,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712460,"byte_end":11712463,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712468,"byte_end":11712475,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712480,"byte_end":11712499,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712504,"byte_end":11712542,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712547,"byte_end":11712550,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712555,"byte_end":11712589,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712594,"byte_end":11712641,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712646,"byte_end":11712653,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712658,"byte_end":11712665,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712670,"byte_end":11712708,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712713,"byte_end":11712716,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712721,"byte_end":11712774,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712779,"byte_end":11712819,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11712824,"byte_end":11712831,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11717178,"byte_end":11717199,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11717132,"byte_end":11717173,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":883},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11717234,"byte_end":11717236,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11717205,"byte_end":11717229,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11717110,"byte_end":11717125,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError {\n\n    /// The maximum line length was exceeded.\n    MaxLineLengthExceeded,\n\n    /// An IO error occured.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":883}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11717028,"byte_end":11717083,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11719158,"byte_end":11719175,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11717972,"byte_end":11718113,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718114,"byte_end":11718117,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718118,"byte_end":11718156,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718157,"byte_end":11718195,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718196,"byte_end":11718199,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718200,"byte_end":11718213,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718214,"byte_end":11718281,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718282,"byte_end":11718285,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718286,"byte_end":11718319,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718320,"byte_end":11718349,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718350,"byte_end":11718353,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718354,"byte_end":11718361,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718362,"byte_end":11718418,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718419,"byte_end":11718453,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718454,"byte_end":11718457,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718458,"byte_end":11718463,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718464,"byte_end":11718511,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718512,"byte_end":11718565,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718566,"byte_end":11718643,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718644,"byte_end":11718679,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718680,"byte_end":11718701,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718702,"byte_end":11718752,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718753,"byte_end":11718816,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718817,"byte_end":11718880,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718881,"byte_end":11718944,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11718945,"byte_end":11719001,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11719002,"byte_end":11719051,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11719052,"byte_end":11719064,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11719065,"byte_end":11719072,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11719073,"byte_end":11719080,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11719081,"byte_end":11719084,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720510,"byte_end":11720513,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720068,"byte_end":11720136,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720141,"byte_end":11720144,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720149,"byte_end":11720159,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720164,"byte_end":11720167,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720172,"byte_end":11720251,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720256,"byte_end":11720330,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720335,"byte_end":11720402,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720407,"byte_end":11720410,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720415,"byte_end":11720498,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721824,"byte_end":11721843,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720793,"byte_end":11720861,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720866,"byte_end":11720869,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720874,"byte_end":11720944,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720949,"byte_end":11721035,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721040,"byte_end":11721110,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721115,"byte_end":11721192,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721197,"byte_end":11721267,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721272,"byte_end":11721295,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721300,"byte_end":11721303,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721308,"byte_end":11721318,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721323,"byte_end":11721326,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721331,"byte_end":11721413,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721418,"byte_end":11721491,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721496,"byte_end":11721573,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721578,"byte_end":11721651,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721656,"byte_end":11721731,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721736,"byte_end":11721739,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11721744,"byte_end":11721812,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722631,"byte_end":11722641,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722100,"byte_end":11722151,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722156,"byte_end":11722159,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722164,"byte_end":11722171,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722176,"byte_end":11722195,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722200,"byte_end":11722245,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722250,"byte_end":11722253,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722258,"byte_end":11722330,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722335,"byte_end":11722382,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722387,"byte_end":11722394,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722399,"byte_end":11722406,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722411,"byte_end":11722456,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722461,"byte_end":11722464,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722469,"byte_end":11722562,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722567,"byte_end":11722607,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722612,"byte_end":11722619,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11726736,"byte_end":11726758,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11726689,"byte_end":11726731,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11726794,"byte_end":11726796,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11726764,"byte_end":11726789,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11726660,"byte_end":11726682,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError {\n\n    /// The maximum chunk length was exceeded.\n    MaxChunkLengthExceeded,\n\n    /// An IO error occurred.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":935}],"decl_id":null,"docs":" An error occured while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a chunk.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11726577,"byte_end":11726633,"line_start":237,"line_end":237,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":150},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":273}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mod.rs","byte_start":6616,"byte_end":6646,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8580,"byte_end":8597,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7362,"byte_end":7439,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7440,"byte_end":7450,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7451,"byte_end":7454,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7455,"byte_end":7520,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7521,"byte_end":7595,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7596,"byte_end":7599,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7600,"byte_end":7683,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7684,"byte_end":7687,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7688,"byte_end":7702,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7703,"byte_end":7706,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7707,"byte_end":7720,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7721,"byte_end":7743,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7744,"byte_end":7784,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7785,"byte_end":7788,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7789,"byte_end":7807,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7808,"byte_end":7829,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7830,"byte_end":7875,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7876,"byte_end":7917,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7918,"byte_end":7921,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7922,"byte_end":7973,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":7974,"byte_end":8037,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8038,"byte_end":8059,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8060,"byte_end":8109,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8110,"byte_end":8156,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8157,"byte_end":8178,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8179,"byte_end":8196,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8197,"byte_end":8278,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8279,"byte_end":8301,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8302,"byte_end":8319,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8320,"byte_end":8333,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8334,"byte_end":8345,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8346,"byte_end":8349,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8350,"byte_end":8383,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8384,"byte_end":8459,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8460,"byte_end":8487,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8488,"byte_end":8499,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8500,"byte_end":8503,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8504,"byte_end":8554,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8555,"byte_end":8560,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8561,"byte_end":8568,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9017,"byte_end":9042,"line_start":66,"line_end":66,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8864,"byte_end":8938,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8939,"byte_end":8956,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8957,"byte_end":9005,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11550,"byte_end":11553,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11475,"byte_end":11538,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13606,"byte_end":13617,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12343,"byte_end":12414,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12419,"byte_end":12452,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12457,"byte_end":12460,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12465,"byte_end":12536,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12541,"byte_end":12573,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12578,"byte_end":12581,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12586,"byte_end":12600,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12605,"byte_end":12608,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12613,"byte_end":12626,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12631,"byte_end":12653,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12658,"byte_end":12698,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12703,"byte_end":12706,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12711,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12734,"byte_end":12755,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12760,"byte_end":12805,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12810,"byte_end":12856,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12861,"byte_end":12864,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12869,"byte_end":12920,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12925,"byte_end":12988,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":12993,"byte_end":13014,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13019,"byte_end":13067,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13072,"byte_end":13118,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13123,"byte_end":13144,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13149,"byte_end":13166,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13171,"byte_end":13252,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13257,"byte_end":13279,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13284,"byte_end":13301,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13306,"byte_end":13319,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13324,"byte_end":13335,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13340,"byte_end":13343,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13348,"byte_end":13381,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13386,"byte_end":13461,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13466,"byte_end":13493,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13498,"byte_end":13509,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13514,"byte_end":13517,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13522,"byte_end":13572,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13577,"byte_end":13582,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":13587,"byte_end":13594,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16192,"byte_end":16198,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16003,"byte_end":16075,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16080,"byte_end":16100,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16105,"byte_end":16108,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16113,"byte_end":16180,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16326,"byte_end":16338,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16250,"byte_end":16314,"line_start":264,"line_end":264,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16489,"byte_end":16498,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":16403,"byte_end":16477,"line_start":269,"line_end":269,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70044,"byte_end":70054,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":69906,"byte_end":69963,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":69964,"byte_end":69967,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":69968,"byte_end":70015,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70777,"byte_end":70780,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70735,"byte_end":70765,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71495,"byte_end":71505,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70983,"byte_end":71012,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71017,"byte_end":71020,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71025,"byte_end":71101,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71106,"byte_end":71175,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71180,"byte_end":71198,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71203,"byte_end":71206,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71211,"byte_end":71282,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71287,"byte_end":71360,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71365,"byte_end":71439,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71444,"byte_end":71483,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73026,"byte_end":73040,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":71929,"byte_end":72010,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72015,"byte_end":72061,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72066,"byte_end":72069,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72074,"byte_end":72122,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72127,"byte_end":72130,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72135,"byte_end":72219,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72224,"byte_end":72283,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72288,"byte_end":72373,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72378,"byte_end":72397,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72402,"byte_end":72481,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72486,"byte_end":72489,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72494,"byte_end":72569,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72574,"byte_end":72650,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72655,"byte_end":72710,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72715,"byte_end":72789,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72794,"byte_end":72867,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72872,"byte_end":72906,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72911,"byte_end":72914,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":72919,"byte_end":72995,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73000,"byte_end":73014,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73674,"byte_end":73682,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73426,"byte_end":73491,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73496,"byte_end":73499,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73504,"byte_end":73577,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73582,"byte_end":73592,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73597,"byte_end":73600,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73605,"byte_end":73662,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73794,"byte_end":73803,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73736,"byte_end":73782,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74144,"byte_end":74155,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73945,"byte_end":73979,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73984,"byte_end":73987,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":73992,"byte_end":74065,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74070,"byte_end":74132,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74460,"byte_end":74469,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74260,"byte_end":74295,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74300,"byte_end":74303,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74308,"byte_end":74381,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74386,"byte_end":74448,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75169,"byte_end":75186,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74620,"byte_end":74689,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74694,"byte_end":74697,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74702,"byte_end":74772,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74777,"byte_end":74850,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74855,"byte_end":74901,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74906,"byte_end":74909,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74914,"byte_end":74989,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":74994,"byte_end":75068,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75073,"byte_end":75099,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75104,"byte_end":75107,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75112,"byte_end":75157,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75352,"byte_end":75362,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75239,"byte_end":75286,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75291,"byte_end":75294,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75299,"byte_end":75340,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":77874,"byte_end":77887,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":77743,"byte_end":77816,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":77817,"byte_end":77820,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":77821,"byte_end":77862,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78081,"byte_end":78084,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78036,"byte_end":78069,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78248,"byte_end":78253,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78211,"byte_end":78236,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78359,"byte_end":78370,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78305,"byte_end":78347,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78485,"byte_end":78495,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78440,"byte_end":78473,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":79229,"byte_end":79241,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78556,"byte_end":78604,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78609,"byte_end":78612,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78617,"byte_end":78658,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78663,"byte_end":78666,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78671,"byte_end":78733,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78738,"byte_end":78798,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78803,"byte_end":78863,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78868,"byte_end":78871,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78876,"byte_end":78951,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78956,"byte_end":79024,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":79029,"byte_end":79105,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":79110,"byte_end":79178,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":79183,"byte_end":79217,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80669,"byte_end":80686,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80385,"byte_end":80437,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80442,"byte_end":80445,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80450,"byte_end":80526,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80531,"byte_end":80565,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80570,"byte_end":80573,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80578,"byte_end":80657,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81146,"byte_end":81157,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80759,"byte_end":80801,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80806,"byte_end":80809,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80814,"byte_end":80887,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80892,"byte_end":80932,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80937,"byte_end":80940,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":80945,"byte_end":81015,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81020,"byte_end":81054,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81059,"byte_end":81062,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81067,"byte_end":81134,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82300,"byte_end":82317,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":243}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82100,"byte_end":82157,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82158,"byte_end":82161,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82162,"byte_end":82229,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82230,"byte_end":82288,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82495,"byte_end":82498,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82412,"byte_end":82483,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83079,"byte_end":83082,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82864,"byte_end":82916,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82921,"byte_end":82924,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82929,"byte_end":83001,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83006,"byte_end":83067,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83525,"byte_end":83532,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83284,"byte_end":83336,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83341,"byte_end":83344,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83349,"byte_end":83422,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83427,"byte_end":83497,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":83502,"byte_end":83513,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85372,"byte_end":85379,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85308,"byte_end":85360,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85665,"byte_end":85669,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85610,"byte_end":85653,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":1019},{"krate":0,"index":1032},{"krate":0,"index":1028},{"krate":0,"index":290},{"krate":0,"index":296},{"krate":0,"index":300},{"krate":0,"index":305},{"krate":0,"index":310},{"krate":0,"index":316}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":86782,"byte_end":86817,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88764,"byte_end":88768,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88777,"byte_end":88782,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88745,"byte_end":88751,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1025}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":86994,"byte_end":87100,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87101,"byte_end":87104,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87105,"byte_end":87195,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87196,"byte_end":87199,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87200,"byte_end":87235,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87236,"byte_end":87239,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87240,"byte_end":87253,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87254,"byte_end":87257,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87258,"byte_end":87295,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87296,"byte_end":87299,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87300,"byte_end":87319,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87320,"byte_end":87362,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87363,"byte_end":87413,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87414,"byte_end":87465,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87466,"byte_end":87484,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87485,"byte_end":87506,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87507,"byte_end":87549,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87550,"byte_end":87583,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87584,"byte_end":87600,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87601,"byte_end":87695,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87696,"byte_end":87706,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87707,"byte_end":87710,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87711,"byte_end":87758,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87759,"byte_end":87764,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87765,"byte_end":87772,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87773,"byte_end":87776,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87977,"byte_end":87980,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":87981,"byte_end":88067,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88068,"byte_end":88078,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88079,"byte_end":88082,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88083,"byte_end":88090,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88091,"byte_end":88126,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88127,"byte_end":88169,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88170,"byte_end":88220,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88221,"byte_end":88272,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88273,"byte_end":88276,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88277,"byte_end":88295,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88296,"byte_end":88317,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88318,"byte_end":88360,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88361,"byte_end":88408,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88409,"byte_end":88425,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88426,"byte_end":88475,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88476,"byte_end":88486,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88487,"byte_end":88490,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88491,"byte_end":88524,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88525,"byte_end":88565,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88566,"byte_end":88598,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88599,"byte_end":88604,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88605,"byte_end":88612,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":88613,"byte_end":88635,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637494,"byte_end":11637504,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637655,"byte_end":11637665,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637992,"byte_end":11638002,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11648180,"byte_end":11648189,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11648389,"byte_end":11648399,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11648550,"byte_end":11648559,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11648882,"byte_end":11648892,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11649138,"byte_end":11649146,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11649243,"byte_end":11649251,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11649362,"byte_end":11649370,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11649470,"byte_end":11649478,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11649588,"byte_end":11649598,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11655180,"byte_end":11655190,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658026,"byte_end":11658032,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11661844,"byte_end":11661850,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11667165,"byte_end":11667171,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11667487,"byte_end":11667493,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668208,"byte_end":11668214,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11669254,"byte_end":11669265,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11670192,"byte_end":11670202,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671091,"byte_end":11671101,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11673198,"byte_end":11673208,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11673521,"byte_end":11673531,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11674257,"byte_end":11674267,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675246,"byte_end":11675257,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675613,"byte_end":11675624,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11677733,"byte_end":11677744,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11678508,"byte_end":11678519,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11678760,"byte_end":11678771,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693779,"byte_end":11693799,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11697132,"byte_end":11697152,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11698038,"byte_end":11698058,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699399,"byte_end":11699419,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699512,"byte_end":11699519,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11709118,"byte_end":11709125,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11709251,"byte_end":11709276,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11709434,"byte_end":11709459,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11709594,"byte_end":11709619,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11710688,"byte_end":11710698,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11713240,"byte_end":11713250,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11716626,"byte_end":11716636,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11716959,"byte_end":11716969,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11717274,"byte_end":11717289,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11717571,"byte_end":11717586,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11717703,"byte_end":11717718,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720044,"byte_end":11720061,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722710,"byte_end":11722727,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11726019,"byte_end":11726036,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11726400,"byte_end":11726417,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11726834,"byte_end":11726856,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11727185,"byte_end":11727207,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11727338,"byte_end":11727360,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":698,"byte_end":703,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":346}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\mod.rs","byte_start":11635906,"byte_end":11635922,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":622}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":880,"byte_end":884,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\lib.rs","byte_start":895,"byte_end":901,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":274}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637494,"byte_end":11637504,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637655,"byte_end":11637665,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":372}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\bytes_codec.rs","byte_start":11637992,"byte_end":11638002,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":383}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11648180,"byte_end":11648189,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":410},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11648389,"byte_end":11648399,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11648550,"byte_end":11648559,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":410},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11648882,"byte_end":11648892,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11649138,"byte_end":11649146,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":1748}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11649243,"byte_end":11649251,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":1751}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11649362,"byte_end":11649370,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":1748}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11649470,"byte_end":11649478,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":1751}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11649588,"byte_end":11649598,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1168},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_impl.rs","byte_start":11655180,"byte_end":11655190,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1168},"to":{"krate":14,"index":9}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11658026,"byte_end":11658032,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11661844,"byte_end":11661850,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11667165,"byte_end":11667171,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1118},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11667487,"byte_end":11667493,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1118},"to":{"krate":14,"index":9}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11668208,"byte_end":11668214,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1118},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed.rs","byte_start":11669254,"byte_end":11669265,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11670192,"byte_end":11670202,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11671091,"byte_end":11671101,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11673198,"byte_end":11673208,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1077},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11673521,"byte_end":11673531,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1077},"to":{"krate":14,"index":9}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_read.rs","byte_start":11674257,"byte_end":11674267,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675246,"byte_end":11675257,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11675613,"byte_end":11675624,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11677733,"byte_end":11677744,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1036},"to":{"krate":14,"index":9}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11678508,"byte_end":11678519,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1036},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\framed_write.rs","byte_start":11678760,"byte_end":11678771,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1036},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11693779,"byte_end":11693799,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11697132,"byte_end":11697152,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":830},"to":{"krate":0,"index":372}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11698038,"byte_end":11698058,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":830},"to":{"krate":0,"index":383}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699399,"byte_end":11699419,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":830},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11699512,"byte_end":11699519,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11709118,"byte_end":11709125,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":818},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11709251,"byte_end":11709276,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":644},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11709434,"byte_end":11709459,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":644},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\length_delimited.rs","byte_start":11709594,"byte_end":11709619,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":644},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11710688,"byte_end":11710698,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11713240,"byte_end":11713250,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":846},"to":{"krate":0,"index":372}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11716626,"byte_end":11716636,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":846},"to":{"krate":0,"index":383}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11716959,"byte_end":11716969,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11717274,"byte_end":11717289,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11717571,"byte_end":11717586,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\lines_codec.rs","byte_start":11717703,"byte_end":11717718,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":880},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11720044,"byte_end":11720061,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11722710,"byte_end":11722727,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":888},"to":{"krate":0,"index":372}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11726019,"byte_end":11726036,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":888},"to":{"krate":0,"index":383}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11726400,"byte_end":11726417,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":888},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11726834,"byte_end":11726856,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":932},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11727185,"byte_end":11727207,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":932},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\codec\\any_delimiter_codec.rs","byte_start":11727338,"byte_end":11727360,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":932},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":27},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":71},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1011},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1011},"to":{"krate":14,"index":9}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":206},"to":{"krate":13,"index":68}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":1988}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\sync\\reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1019},"to":{"krate":2,"index":9585}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1019},"to":{"krate":15,"index":161}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1019},"to":{"krate":15,"index":133}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1019},"to":{"krate":15,"index":186}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1019},"to":{"krate":15,"index":212}},{"span":{"file_name":"C:\\Users\\jhyra\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.6.6\\src\\either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1019},"to":{"krate":13,"index":68}}]}